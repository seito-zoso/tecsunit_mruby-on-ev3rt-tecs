/*------------ TECSInfoPlugin post code ------------*/
region rDomainEV3{
    region rTECSInfo {

        /*** :: namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo _RootNamespaceInfo{
            name = "::";

            /* SIGNATURE info */
            cSignatureInfo[] = sTaskBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTaskExceptionBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTaskSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siTaskSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sInitializeRoutineBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTerminateRoutineBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siHandlerBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sConfigInterruptSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sCyclicSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sAlarmSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siAlarmSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sSemaphoreSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siSemaphoreSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sEventflagSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siEventflagSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sPriorityDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siPriorityDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sFixedSizeMemoryPoolSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sKernelSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siKernelSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sMessageBufferSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sMallocSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sUltrasonicSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sColorSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTouchSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sGyroSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sMotorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sButtonSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sLCDSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sLEDSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sBatterySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sSpeakerSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sRiteVMSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sBalancerSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sSharedMemorySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTarget1SignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTarget2SignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTarget3SignatureInfo.eSignatureInfo;

            /* CELLTYPE info */
            cCelltypeInfo[] = tTaskCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tKernelCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tColorSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tTouchSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tGyroSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tMotorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tButtonCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tLCDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tLEDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tBatteryCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tSpeakerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tEV3PlatformCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tBalancerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tSharedMemoryCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tTarget1CelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tTarget2CelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tTarget3CelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tTaskMainCelltypeInfo.eCelltypeInfo;

            /* NAMESPACE info */
            cNamespaceInfo[] = nMrubyNamespaceInfo.eNamespaceInfo;
            cNamespaceInfo[] = nPosixNamespaceInfo.eNamespaceInfo;
            cNamespaceInfo[] = nTECSInfoNamespaceInfo.eNamespaceInfo;
        };   /* cell nTECSInfo::tNamespaceInfo _RootNamespaceInfo */

        /*** sTaskBody signature information ****/
        cell nTECSInfo::tSignatureInfo sTaskBodySignatureInfo {
            name            = "sTaskBody";
            cFunctionInfo[] = sTaskBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTaskBody_mainFunctionInfo {
            name            = "main";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sTaskExceptionBody signature information ****/
        cell nTECSInfo::tSignatureInfo sTaskExceptionBodySignatureInfo {
            name            = "sTaskExceptionBody";
            cFunctionInfo[] = sTaskExceptionBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTaskExceptionBody_mainFunctionInfo {
            name            = "main";
            bOneway         = false;
            cParamInfo[]    = sTaskExceptionBody_main_patternParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTaskExceptionBody_main_patternParamInfo {
            name            = "pattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TEXPTNTypeInfo.eTypeInfo;
        };

        /*** sTask signature information ****/
        cell nTECSInfo::tSignatureInfo sTaskSignatureInfo {
            name            = "sTask";
            cFunctionInfo[] = sTask_activateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_cancelActivateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_terminateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_changePriorityFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_getPriorityFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_referFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_wakeupFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_cancelWakeupFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_releaseWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_suspendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_resumeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_raiseExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_referExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_startOverRunHandlerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_stopOverRunHandlerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_referOverRunHandlerFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_activateFunctionInfo {
            name            = "activate";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_cancelActivateFunctionInfo {
            name            = "cancelActivate";
            bOneway         = false;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_terminateFunctionInfo {
            name            = "terminate";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_changePriorityFunctionInfo {
            name            = "changePriority";
            bOneway         = false;
            cParamInfo[]    = sTask_changePriority_priorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_changePriority_priorityParamInfo {
            name            = "priority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_getPriorityFunctionInfo {
            name            = "getPriority";
            bOneway         = false;
            cParamInfo[]    = sTask_getPriority_p_priorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_getPriority_p_priorityParamInfo {
            name            = "p_priority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sTask_refer_pk_taskStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_refer_pk_taskStatusParamInfo {
            name            = "pk_taskStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RTSK_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_tskstatVarDeclInfo {
            name            = "tskstat";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_tskstat" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_tskstat" );
            cTypeInfo       = STATTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_tskpriVarDeclInfo {
            name            = "tskpri";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_tskpri" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_tskpri" );
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_tskbpriVarDeclInfo {
            name            = "tskbpri";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_tskbpri" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_tskbpri" );
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_tskwaitVarDeclInfo {
            name            = "tskwait";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_tskwait" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_tskwait" );
            cTypeInfo       = STATTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_wobjidVarDeclInfo {
            name            = "wobjid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_wobjid" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_wobjid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_lefttmoVarDeclInfo {
            name            = "lefttmo";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_lefttmo" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_lefttmo" );
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_actcntVarDeclInfo {
            name            = "actcnt";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_actcnt" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_actcnt" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_wupcntVarDeclInfo {
            name            = "wupcnt";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_wupcnt" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_wupcnt" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_texmskVarDeclInfo {
            name            = "texmsk";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_texmsk" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_texmsk" );
            cTypeInfo       = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_waifbdVarDeclInfo {
            name            = "waifbd";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_waifbd" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_waifbd" );
            cTypeInfo       = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtsk_svclevelVarDeclInfo {
            name            = "svclevel";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtsk_svclevel" );
            place           = C_EXP( "PLACE_OF_struct__t_rtsk_svclevel" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_wakeupFunctionInfo {
            name            = "wakeup";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_cancelWakeupFunctionInfo {
            name            = "cancelWakeup";
            bOneway         = false;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_releaseWaitFunctionInfo {
            name            = "releaseWait";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_suspendFunctionInfo {
            name            = "suspend";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_resumeFunctionInfo {
            name            = "resume";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_raiseExceptionFunctionInfo {
            name            = "raiseException";
            bOneway         = false;
            cParamInfo[]    = sTask_raiseException_patternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_raiseException_patternParamInfo {
            name            = "pattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TEXPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_referExceptionFunctionInfo {
            name            = "referException";
            bOneway         = false;
            cParamInfo[]    = sTask_referException_pk_rtexParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_referException_pk_rtexParamInfo {
            name            = "pk_rtex";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RTEX_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtex_texstatVarDeclInfo {
            name            = "texstat";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtex_texstat" );
            place           = C_EXP( "PLACE_OF_struct__t_rtex_texstat" );
            cTypeInfo       = STATTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rtex_pndptnVarDeclInfo {
            name            = "pndptn";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rtex_pndptn" );
            place           = C_EXP( "PLACE_OF_struct__t_rtex_pndptn" );
            cTypeInfo       = TEXPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_startOverRunHandlerFunctionInfo {
            name            = "startOverRunHandler";
            bOneway         = false;
            cParamInfo[]    = sTask_startOverRunHandler_ovrtimParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_startOverRunHandler_ovrtimParamInfo {
            name            = "ovrtim";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = OVRTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_stopOverRunHandlerFunctionInfo {
            name            = "stopOverRunHandler";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_referOverRunHandlerFunctionInfo {
            name            = "referOverRunHandler";
            bOneway         = false;
            cParamInfo[]    = sTask_referOverRunHandler_pk_rovrParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_referOverRunHandler_pk_rovrParamInfo {
            name            = "pk_rovr";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_ROVR_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rovr_ovrstatVarDeclInfo {
            name            = "ovrstat";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rovr_ovrstat" );
            place           = C_EXP( "PLACE_OF_struct__t_rovr_ovrstat" );
            cTypeInfo       = STATTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rovr_leftotmVarDeclInfo {
            name            = "leftotm";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rovr_leftotm" );
            place           = C_EXP( "PLACE_OF_struct__t_rovr_leftotm" );
            cTypeInfo       = OVRTIMTypeInfo.eTypeInfo;
        };

        /*** siTask signature information ****/
        cell nTECSInfo::tSignatureInfo siTaskSignatureInfo {
            name            = "siTask";
            cFunctionInfo[] = siTask_activateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_wakeupFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_releaseWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_raiseExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_disableWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_enableWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_startOverRunHandlerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_stopOverRunHandlerFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_activateFunctionInfo {
            name            = "activate";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_wakeupFunctionInfo {
            name            = "wakeup";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_releaseWaitFunctionInfo {
            name            = "releaseWait";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_raiseExceptionFunctionInfo {
            name            = "raiseException";
            bOneway         = false;
            cParamInfo[]    = siTask_raiseException_patternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siTask_raiseException_patternParamInfo {
            name            = "pattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TEXPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_disableWaitFunctionInfo {
            name            = "disableWait";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_enableWaitFunctionInfo {
            name            = "enableWait";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_startOverRunHandlerFunctionInfo {
            name            = "startOverRunHandler";
            bOneway         = false;
            cParamInfo[]    = siTask_startOverRunHandler_ovrtimParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siTask_startOverRunHandler_ovrtimParamInfo {
            name            = "ovrtim";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = OVRTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_stopOverRunHandlerFunctionInfo {
            name            = "stopOverRunHandler";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sInitializeRoutineBody signature information ****/
        cell nTECSInfo::tSignatureInfo sInitializeRoutineBodySignatureInfo {
            name            = "sInitializeRoutineBody";
            cFunctionInfo[] = sInitializeRoutineBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sInitializeRoutineBody_mainFunctionInfo {
            name            = "main";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sTerminateRoutineBody signature information ****/
        cell nTECSInfo::tSignatureInfo sTerminateRoutineBodySignatureInfo {
            name            = "sTerminateRoutineBody";
            cFunctionInfo[] = sTerminateRoutineBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTerminateRoutineBody_mainFunctionInfo {
            name            = "main";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** siHandlerBody signature information ****/
        cell nTECSInfo::tSignatureInfo siHandlerBodySignatureInfo {
            name            = "siHandlerBody";
            cFunctionInfo[] = siHandlerBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siHandlerBody_mainFunctionInfo {
            name            = "main";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sConfigInterrupt signature information ****/
        cell nTECSInfo::tSignatureInfo sConfigInterruptSignatureInfo {
            name            = "sConfigInterrupt";
            cFunctionInfo[] = sConfigInterrupt_disableFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sConfigInterrupt_enableFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sConfigInterrupt_disableFunctionInfo {
            name            = "disable";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sConfigInterrupt_enableFunctionInfo {
            name            = "enable";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sCyclic signature information ****/
        cell nTECSInfo::tSignatureInfo sCyclicSignatureInfo {
            name            = "sCyclic";
            cFunctionInfo[] = sCyclic_startFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sCyclic_stopFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sCyclic_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sCyclic_startFunctionInfo {
            name            = "start";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sCyclic_stopFunctionInfo {
            name            = "stop";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sCyclic_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sCyclic_refer_pk_cyclicHandlerStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sCyclic_refer_pk_cyclicHandlerStatusParamInfo {
            name            = "pk_cyclicHandlerStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RCYC_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rcyc_cycstatVarDeclInfo {
            name            = "cycstat";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rcyc_cycstat" );
            place           = C_EXP( "PLACE_OF_struct__t_rcyc_cycstat" );
            cTypeInfo       = STATTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rcyc_lefttimVarDeclInfo {
            name            = "lefttim";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rcyc_lefttim" );
            place           = C_EXP( "PLACE_OF_struct__t_rcyc_lefttim" );
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };

        /*** sAlarm signature information ****/
        cell nTECSInfo::tSignatureInfo sAlarmSignatureInfo {
            name            = "sAlarm";
            cFunctionInfo[] = sAlarm_startFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sAlarm_stopFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sAlarm_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sAlarm_startFunctionInfo {
            name            = "start";
            bOneway         = false;
            cParamInfo[]    = sAlarm_start_alarmTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sAlarm_start_alarmTimeParamInfo {
            name            = "alarmTime";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sAlarm_stopFunctionInfo {
            name            = "stop";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sAlarm_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sAlarm_refer_pk_alarmStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sAlarm_refer_pk_alarmStatusParamInfo {
            name            = "pk_alarmStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RALM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_ralm_almstatVarDeclInfo {
            name            = "almstat";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_ralm_almstat" );
            place           = C_EXP( "PLACE_OF_struct__t_ralm_almstat" );
            cTypeInfo       = STATTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_ralm_lefttimVarDeclInfo {
            name            = "lefttim";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_ralm_lefttim" );
            place           = C_EXP( "PLACE_OF_struct__t_ralm_lefttim" );
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };

        /*** siAlarm signature information ****/
        cell nTECSInfo::tSignatureInfo siAlarmSignatureInfo {
            name            = "siAlarm";
            cFunctionInfo[] = siAlarm_startFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siAlarm_stopFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siAlarm_startFunctionInfo {
            name            = "start";
            bOneway         = false;
            cParamInfo[]    = siAlarm_start_alarmTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siAlarm_start_alarmTimeParamInfo {
            name            = "alarmTime";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siAlarm_stopFunctionInfo {
            name            = "stop";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sSemaphore signature information ****/
        cell nTECSInfo::tSignatureInfo sSemaphoreSignatureInfo {
            name            = "sSemaphore";
            cFunctionInfo[] = sSemaphore_signalFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_waitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_waitPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_waitTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_signalFunctionInfo {
            name            = "signal";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_waitFunctionInfo {
            name            = "wait";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_waitPollingFunctionInfo {
            name            = "waitPolling";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_waitTimeoutFunctionInfo {
            name            = "waitTimeout";
            bOneway         = false;
            cParamInfo[]    = sSemaphore_waitTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSemaphore_waitTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_initializeFunctionInfo {
            name            = "initialize";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sSemaphore_refer_pk_semaphoreStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSemaphore_refer_pk_semaphoreStatusParamInfo {
            name            = "pk_semaphoreStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RSEM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rsem_wtskidVarDeclInfo {
            name            = "wtskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rsem_wtskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rsem_wtskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rsem_semcntVarDeclInfo {
            name            = "semcnt";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rsem_semcnt" );
            place           = C_EXP( "PLACE_OF_struct__t_rsem_semcnt" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };

        /*** siSemaphore signature information ****/
        cell nTECSInfo::tSignatureInfo siSemaphoreSignatureInfo {
            name            = "siSemaphore";
            cFunctionInfo[] = siSemaphore_signalFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siSemaphore_signalFunctionInfo {
            name            = "signal";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sEventflag signature information ****/
        cell nTECSInfo::tSignatureInfo sEventflagSignatureInfo {
            name            = "sEventflag";
            cFunctionInfo[] = sEventflag_setFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_clearFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_waitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_waitPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_waitTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_setFunctionInfo {
            name            = "set";
            bOneway         = false;
            cParamInfo[]    = sEventflag_set_setPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_set_setPatternParamInfo {
            name            = "setPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_clearFunctionInfo {
            name            = "clear";
            bOneway         = false;
            cParamInfo[]    = sEventflag_clear_clearPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_clear_clearPatternParamInfo {
            name            = "clearPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_waitFunctionInfo {
            name            = "wait";
            bOneway         = false;
            cParamInfo[]    = sEventflag_wait_waitPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_wait_waitFlagModeParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_wait_p_flagPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_wait_waitPatternParamInfo {
            name            = "waitPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_wait_waitFlagModeParamInfo {
            name            = "waitFlagMode";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = MODETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_wait_p_flagPatternParamInfo {
            name            = "p_flagPattern";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTN_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_waitPollingFunctionInfo {
            name            = "waitPolling";
            bOneway         = false;
            cParamInfo[]    = sEventflag_waitPolling_waitPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitPolling_waitFlagModeParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitPolling_p_flagPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitPolling_waitPatternParamInfo {
            name            = "waitPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitPolling_waitFlagModeParamInfo {
            name            = "waitFlagMode";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = MODETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitPolling_p_flagPatternParamInfo {
            name            = "p_flagPattern";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTN_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_waitTimeoutFunctionInfo {
            name            = "waitTimeout";
            bOneway         = false;
            cParamInfo[]    = sEventflag_waitTimeout_waitPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitTimeout_waitFlagModeParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitTimeout_p_flagPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_waitPatternParamInfo {
            name            = "waitPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_waitFlagModeParamInfo {
            name            = "waitFlagMode";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = MODETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_p_flagPatternParamInfo {
            name            = "p_flagPattern";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTN_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_initializeFunctionInfo {
            name            = "initialize";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sEventflag_refer_pk_eventflagStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_refer_pk_eventflagStatusParamInfo {
            name            = "pk_eventflagStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RFLG_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rflg_wtskidVarDeclInfo {
            name            = "wtskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rflg_wtskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rflg_wtskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rflg_flgptnVarDeclInfo {
            name            = "flgptn";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rflg_flgptn" );
            place           = C_EXP( "PLACE_OF_struct__t_rflg_flgptn" );
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };

        /*** siEventflag signature information ****/
        cell nTECSInfo::tSignatureInfo siEventflagSignatureInfo {
            name            = "siEventflag";
            cFunctionInfo[] = siEventflag_setFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siEventflag_setFunctionInfo {
            name            = "set";
            bOneway         = false;
            cParamInfo[]    = siEventflag_set_setPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siEventflag_set_setPatternParamInfo {
            name            = "setPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };

        /*** sDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo sDataqueueSignatureInfo {
            name            = "sDataqueue";
            cFunctionInfo[] = sDataqueue_sendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_sendTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_sendForceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_receiveFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_receivePollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_receiveTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendFunctionInfo {
            name            = "send";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_send_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_send_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendPollingFunctionInfo {
            name            = "sendPolling";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendTimeoutFunctionInfo {
            name            = "sendTimeout";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_sendTimeout_dataParamInfo.eParamInfo;
            cParamInfo[]    = sDataqueue_sendTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendTimeout_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendForceFunctionInfo {
            name            = "sendForce";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_sendForce_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendForce_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_receiveFunctionInfo {
            name            = "receive";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_receive_p_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receive_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_receivePollingFunctionInfo {
            name            = "receivePolling";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_receivePolling_p_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receivePolling_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_receiveTimeoutFunctionInfo {
            name            = "receiveTimeout";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_receiveTimeout_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sDataqueue_receiveTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receiveTimeout_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receiveTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_initializeFunctionInfo {
            name            = "initialize";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_refer_pk_dataqueueStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_refer_pk_dataqueueStatusParamInfo {
            name            = "pk_dataqueueStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RDTQ_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rdtq_stskidVarDeclInfo {
            name            = "stskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rdtq_stskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rdtq_stskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rdtq_rtskidVarDeclInfo {
            name            = "rtskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rdtq_rtskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rdtq_rtskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rdtq_sdtqcntVarDeclInfo {
            name            = "sdtqcnt";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rdtq_sdtqcnt" );
            place           = C_EXP( "PLACE_OF_struct__t_rdtq_sdtqcnt" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };

        /*** siDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo siDataqueueSignatureInfo {
            name            = "siDataqueue";
            cFunctionInfo[] = siDataqueue_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siDataqueue_sendForceFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siDataqueue_sendPollingFunctionInfo {
            name            = "sendPolling";
            bOneway         = false;
            cParamInfo[]    = siDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siDataqueue_sendForceFunctionInfo {
            name            = "sendForce";
            bOneway         = false;
            cParamInfo[]    = siDataqueue_sendForce_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siDataqueue_sendForce_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };

        /*** sPriorityDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo sPriorityDataqueueSignatureInfo {
            name            = "sPriorityDataqueue";
            cFunctionInfo[] = sPriorityDataqueue_sendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_sendTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_receiveFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_receivePollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_receiveTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_sendFunctionInfo {
            name            = "send";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_send_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_send_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_send_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_send_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_sendPollingFunctionInfo {
            name            = "sendPolling";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_sendPolling_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendPolling_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_sendTimeoutFunctionInfo {
            name            = "sendTimeout";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_sendTimeout_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_sendTimeout_dataPriorityParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_sendTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendTimeout_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendTimeout_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_receiveFunctionInfo {
            name            = "receive";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_receive_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receive_p_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receive_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receive_p_dataPriorityParamInfo {
            name            = "p_dataPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_receivePollingFunctionInfo {
            name            = "receivePolling";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_receivePolling_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receivePolling_p_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receivePolling_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receivePolling_p_dataPriorityParamInfo {
            name            = "p_dataPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_receiveTimeoutFunctionInfo {
            name            = "receiveTimeout";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_receiveTimeout_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receiveTimeout_p_dataPriorityParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receiveTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receiveTimeout_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receiveTimeout_p_dataPriorityParamInfo {
            name            = "p_dataPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receiveTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_initializeFunctionInfo {
            name            = "initialize";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_refer_pk_priorityDataqueueStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_refer_pk_priorityDataqueueStatusParamInfo {
            name            = "pk_priorityDataqueueStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RPDQ_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rpdq_stskidVarDeclInfo {
            name            = "stskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rpdq_stskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rpdq_stskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rpdq_rtskidVarDeclInfo {
            name            = "rtskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rpdq_rtskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rpdq_rtskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rpdq_spdqcntVarDeclInfo {
            name            = "spdqcnt";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rpdq_spdqcnt" );
            place           = C_EXP( "PLACE_OF_struct__t_rpdq_spdqcnt" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };

        /*** siPriorityDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo siPriorityDataqueueSignatureInfo {
            name            = "siPriorityDataqueue";
            cFunctionInfo[] = siPriorityDataqueue_sendPollingFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siPriorityDataqueue_sendPollingFunctionInfo {
            name            = "sendPolling";
            bOneway         = false;
            cParamInfo[]    = siPriorityDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cParamInfo[]    = siPriorityDataqueue_sendPolling_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siPriorityDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siPriorityDataqueue_sendPolling_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };

        /*** sFixedSizeMemoryPool signature information ****/
        cell nTECSInfo::tSignatureInfo sFixedSizeMemoryPoolSignatureInfo {
            name            = "sFixedSizeMemoryPool";
            cFunctionInfo[] = sFixedSizeMemoryPool_getFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_getPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_getTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_releaseFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_getFunctionInfo {
            name            = "get";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_get_p_blockParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_get_p_blockParamInfo {
            name            = "p_block";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_getPollingFunctionInfo {
            name            = "getPolling";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_getPolling_p_blockParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_getPolling_p_blockParamInfo {
            name            = "p_block";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_getTimeoutFunctionInfo {
            name            = "getTimeout";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_getTimeout_p_blockParamInfo.eParamInfo;
            cParamInfo[]    = sFixedSizeMemoryPool_getTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_getTimeout_p_blockParamInfo {
            name            = "p_block";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_getTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_releaseFunctionInfo {
            name            = "release";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_release_blockParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_release_blockParamInfo {
            name            = "block";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_initializeFunctionInfo {
            name            = "initialize";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_refer_pk_memoryPoolFixedSizeStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_refer_pk_memoryPoolFixedSizeStatusParamInfo {
            name            = "pk_memoryPoolFixedSizeStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RMPF_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rmpf_wtskidVarDeclInfo {
            name            = "wtskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rmpf_wtskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rmpf_wtskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rmpf_fblkcntVarDeclInfo {
            name            = "fblkcnt";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rmpf_fblkcnt" );
            place           = C_EXP( "PLACE_OF_struct__t_rmpf_fblkcnt" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };

        /*** sKernel signature information ****/
        cell nTECSInfo::tSignatureInfo sKernelSignatureInfo {
            name            = "sKernel";
            cFunctionInfo[] = sKernel_sleepFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_sleepTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_delayFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_exitTaskFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getTaskIdFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_rotateReadyQueueFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getTimeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getMicroTimeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_lockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_unlockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_disableDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_enableDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_disableTaskExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_enableTaskExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_changeInterruptPriorityMaskFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getInterruptPriorityMaskFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_exitKernelFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseContextFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseLockFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseDispatchPendingStateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseKernelFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_sleepFunctionInfo {
            name            = "sleep";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_sleepTimeoutFunctionInfo {
            name            = "sleepTimeout";
            bOneway         = false;
            cParamInfo[]    = sKernel_sleepTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_sleepTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_delayFunctionInfo {
            name            = "delay";
            bOneway         = false;
            cParamInfo[]    = sKernel_delay_delayTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_delay_delayTimeParamInfo {
            name            = "delayTime";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_exitTaskFunctionInfo {
            name            = "exitTask";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getTaskIdFunctionInfo {
            name            = "getTaskId";
            bOneway         = false;
            cParamInfo[]    = sKernel_getTaskId_p_taskIdParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getTaskId_p_taskIdParamInfo {
            name            = "p_taskId";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = ID_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_rotateReadyQueueFunctionInfo {
            name            = "rotateReadyQueue";
            bOneway         = false;
            cParamInfo[]    = sKernel_rotateReadyQueue_taskPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_rotateReadyQueue_taskPriorityParamInfo {
            name            = "taskPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getTimeFunctionInfo {
            name            = "getTime";
            bOneway         = false;
            cParamInfo[]    = sKernel_getTime_p_systemTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getTime_p_systemTimeParamInfo {
            name            = "p_systemTime";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = SYSTIM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getMicroTimeFunctionInfo {
            name            = "getMicroTime";
            bOneway         = false;
            cParamInfo[]    = sKernel_getMicroTime_p_systemMicroTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getMicroTime_p_systemMicroTimeParamInfo {
            name            = "p_systemMicroTime";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = SYSUTM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_lockCpuFunctionInfo {
            name            = "lockCpu";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_unlockCpuFunctionInfo {
            name            = "unlockCpu";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_disableDispatchFunctionInfo {
            name            = "disableDispatch";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_enableDispatchFunctionInfo {
            name            = "enableDispatch";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_disableTaskExceptionFunctionInfo {
            name            = "disableTaskException";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_enableTaskExceptionFunctionInfo {
            name            = "enableTaskException";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_changeInterruptPriorityMaskFunctionInfo {
            name            = "changeInterruptPriorityMask";
            bOneway         = false;
            cParamInfo[]    = sKernel_changeInterruptPriorityMask_interruptPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_changeInterruptPriorityMask_interruptPriorityParamInfo {
            name            = "interruptPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getInterruptPriorityMaskFunctionInfo {
            name            = "getInterruptPriorityMask";
            bOneway         = false;
            cParamInfo[]    = sKernel_getInterruptPriorityMask_p_interruptPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getInterruptPriorityMask_p_interruptPriorityParamInfo {
            name            = "p_interruptPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_exitKernelFunctionInfo {
            name            = "exitKernel";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseContextFunctionInfo {
            name            = "senseContext";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseLockFunctionInfo {
            name            = "senseLock";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseDispatchFunctionInfo {
            name            = "senseDispatch";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseDispatchPendingStateFunctionInfo {
            name            = "senseDispatchPendingState";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseKernelFunctionInfo {
            name            = "senseKernel";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };

        /*** siKernel signature information ****/
        cell nTECSInfo::tSignatureInfo siKernelSignatureInfo {
            name            = "siKernel";
            cFunctionInfo[] = siKernel_getTaskIdFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_rotateReadyQueueFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_getMicroTimeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_lockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_unlockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_exitKernelFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseContextFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseLockFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseDispatchPendingStateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseKernelFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseDispatchPendingStateCPUFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseTaskExceptionPendingStateCPUFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_getTaskIdFunctionInfo {
            name            = "getTaskId";
            bOneway         = false;
            cParamInfo[]    = siKernel_getTaskId_p_taskIdParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_getTaskId_p_taskIdParamInfo {
            name            = "p_taskId";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = ID_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_rotateReadyQueueFunctionInfo {
            name            = "rotateReadyQueue";
            bOneway         = false;
            cParamInfo[]    = siKernel_rotateReadyQueue_taskPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_rotateReadyQueue_taskPriorityParamInfo {
            name            = "taskPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_getMicroTimeFunctionInfo {
            name            = "getMicroTime";
            bOneway         = false;
            cParamInfo[]    = siKernel_getMicroTime_p_systemMicroTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_getMicroTime_p_systemMicroTimeParamInfo {
            name            = "p_systemMicroTime";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = SYSUTM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_lockCpuFunctionInfo {
            name            = "lockCpu";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_unlockCpuFunctionInfo {
            name            = "unlockCpu";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_exitKernelFunctionInfo {
            name            = "exitKernel";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseContextFunctionInfo {
            name            = "senseContext";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseLockFunctionInfo {
            name            = "senseLock";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseDispatchFunctionInfo {
            name            = "senseDispatch";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseDispatchPendingStateFunctionInfo {
            name            = "senseDispatchPendingState";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseKernelFunctionInfo {
            name            = "senseKernel";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseDispatchPendingStateCPUFunctionInfo {
            name            = "senseDispatchPendingStateCPU";
            bOneway         = false;
            cParamInfo[]    = siKernel_senseDispatchPendingStateCPU_p_exceptionInfomationParamInfo.eParamInfo;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_senseDispatchPendingStateCPU_p_exceptionInfomationParamInfo {
            name            = "p_exceptionInfomation";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseTaskExceptionPendingStateCPUFunctionInfo {
            name            = "senseTaskExceptionPendingStateCPU";
            bOneway         = false;
            cParamInfo[]    = siKernel_senseTaskExceptionPendingStateCPU_p_exceptionInfomationParamInfo.eParamInfo;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_senseTaskExceptionPendingStateCPU_p_exceptionInfomationParamInfo {
            name            = "p_exceptionInfomation";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sMessageBuffer signature information ****/
        cell nTECSInfo::tSignatureInfo sMessageBufferSignatureInfo {
            name            = "sMessageBuffer";
            cFunctionInfo[] = sMessageBuffer_sendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_sendTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_receiveFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_receivePollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_receiveTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_sendFunctionInfo {
            name            = "send";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_send_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_send_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_send_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_send_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_sendPollingFunctionInfo {
            name            = "sendPolling";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_sendPolling_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_sendPolling_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendPolling_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendPolling_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_sendTimeoutFunctionInfo {
            name            = "sendTimeout";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_sendTimeout_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_sendTimeout_sizeParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_sendTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendTimeout_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendTimeout_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_receiveFunctionInfo {
            name            = "receive";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_receive_messageParamInfo.eParamInfo;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receive_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_receivePollingFunctionInfo {
            name            = "receivePolling";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_receivePolling_messageParamInfo.eParamInfo;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receivePolling_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_receiveTimeoutFunctionInfo {
            name            = "receiveTimeout";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_receiveTimeout_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_receiveTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receiveTimeout_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receiveTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_initializeFunctionInfo {
            name            = "initialize";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_referFunctionInfo {
            name            = "refer";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_refer_packetParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_refer_packetParamInfo {
            name            = "packet";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RMBF_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rmbf_stskidVarDeclInfo {
            name            = "stskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rmbf_stskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rmbf_stskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rmbf_rtskidVarDeclInfo {
            name            = "rtskid";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rmbf_rtskid" );
            place           = C_EXP( "PLACE_OF_struct__t_rmbf_rtskid" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rmbf_smbfcntVarDeclInfo {
            name            = "smbfcnt";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rmbf_smbfcnt" );
            place           = C_EXP( "PLACE_OF_struct__t_rmbf_smbfcnt" );
            cTypeInfo       = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__t_rmbf_fmbfszVarDeclInfo {
            name            = "fmbfsz";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__t_rmbf_fmbfsz" );
            place           = C_EXP( "PLACE_OF_struct__t_rmbf_fmbfsz" );
            cTypeInfo       = SIZETypeInfo.eTypeInfo;
        };

        /*** sMalloc signature information ****/
        cell nTECSInfo::tSignatureInfo sMallocSignatureInfo {
            name            = "sMalloc";
            cFunctionInfo[] = sMalloc_initializeMemoryPoolFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_callocFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_mallocFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_reallocFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_freeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_initializeMemoryPoolFunctionInfo {
            name            = "initializeMemoryPool";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_callocFunctionInfo {
            name            = "calloc";
            bOneway         = false;
            cParamInfo[]    = sMalloc_calloc_nelemParamInfo.eParamInfo;
            cParamInfo[]    = sMalloc_calloc_elem_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_calloc_nelemParamInfo {
            name            = "nelem";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_calloc_elem_sizeParamInfo {
            name            = "elem_size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_mallocFunctionInfo {
            name            = "malloc";
            bOneway         = false;
            cParamInfo[]    = sMalloc_malloc_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_malloc_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_reallocFunctionInfo {
            name            = "realloc";
            bOneway         = false;
            cParamInfo[]    = sMalloc_realloc_ptrParamInfo.eParamInfo;
            cParamInfo[]    = sMalloc_realloc_new_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_realloc_ptrParamInfo {
            name            = "ptr";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_realloc_new_sizeParamInfo {
            name            = "new_size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_freeFunctionInfo {
            name            = "free";
            bOneway         = false;
            cParamInfo[]    = sMalloc_free_ptrParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_free_ptrParamInfo {
            name            = "ptr";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sUltrasonicSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sUltrasonicSensorSignatureInfo {
            name            = "sUltrasonicSensor";
            cFunctionInfo[] = sUltrasonicSensor_getDistanceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sUltrasonicSensor_listenFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sUltrasonicSensor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sUltrasonicSensor_getDistanceFunctionInfo {
            name            = "getDistance";
            bOneway         = false;
            cReturnTypeInfo = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sUltrasonicSensor_listenFunctionInfo {
            name            = "listen";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sUltrasonicSensor_initializePortFunctionInfo {
            name            = "initializePort";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sColorSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sColorSensorSignatureInfo {
            name            = "sColorSensor";
            cFunctionInfo[] = sColorSensor_getColorFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_getReflectFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_getAmbientFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_initializePortFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_getRGBRawFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getColorFunctionInfo {
            name            = "getColor";
            bOneway         = false;
            cReturnTypeInfo = colorid_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getReflectFunctionInfo {
            name            = "getReflect";
            bOneway         = false;
            cReturnTypeInfo = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getAmbientFunctionInfo {
            name            = "getAmbient";
            bOneway         = false;
            cReturnTypeInfo = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_initializePortFunctionInfo {
            name            = "initializePort";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getRGBRawFunctionInfo {
            name            = "getRGBRaw";
            bOneway         = false;
            cParamInfo[]    = sColorSensor_getRGBRaw_rParamInfo.eParamInfo;
            cParamInfo[]    = sColorSensor_getRGBRaw_gParamInfo.eParamInfo;
            cParamInfo[]    = sColorSensor_getRGBRaw_bParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sColorSensor_getRGBRaw_rParamInfo {
            name            = "r";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sColorSensor_getRGBRaw_gParamInfo {
            name            = "g";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sColorSensor_getRGBRaw_bParamInfo {
            name            = "b";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sTouchSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sTouchSensorSignatureInfo {
            name            = "sTouchSensor";
            cFunctionInfo[] = sTouchSensor_isPressedFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTouchSensor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTouchSensor_isPressedFunctionInfo {
            name            = "isPressed";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTouchSensor_initializePortFunctionInfo {
            name            = "initializePort";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sGyroSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sGyroSensorSignatureInfo {
            name            = "sGyroSensor";
            cFunctionInfo[] = sGyroSensor_getAngleFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_getRateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_resetFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_calibrateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_getAngleFunctionInfo {
            name            = "getAngle";
            bOneway         = false;
            cReturnTypeInfo = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_getRateFunctionInfo {
            name            = "getRate";
            bOneway         = false;
            cReturnTypeInfo = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_resetFunctionInfo {
            name            = "reset";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_calibrateFunctionInfo {
            name            = "calibrate";
            bOneway         = false;
            cParamInfo[]    = sGyroSensor_calibrate_timesParamInfo.eParamInfo;
            cReturnTypeInfo = float32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sGyroSensor_calibrate_timesParamInfo {
            name            = "times";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_initializePortFunctionInfo {
            name            = "initializePort";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sMotor signature information ****/
        cell nTECSInfo::tSignatureInfo sMotorSignatureInfo {
            name            = "sMotor";
            cFunctionInfo[] = sMotor_getTypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_getCountsFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_getPowerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_resetCountsFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_setPowerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_stopFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_rotateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_getTypeFunctionInfo {
            name            = "getType";
            bOneway         = false;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_getCountsFunctionInfo {
            name            = "getCounts";
            bOneway         = false;
            cReturnTypeInfo = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_getPowerFunctionInfo {
            name            = "getPower";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_resetCountsFunctionInfo {
            name            = "resetCounts";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_setPowerFunctionInfo {
            name            = "setPower";
            bOneway         = false;
            cParamInfo[]    = sMotor_setPower_powerParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_setPower_powerParamInfo {
            name            = "power";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_stopFunctionInfo {
            name            = "stop";
            bOneway         = false;
            cParamInfo[]    = sMotor_stop_brakeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_stop_brakeParamInfo {
            name            = "brake";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_rotateFunctionInfo {
            name            = "rotate";
            bOneway         = false;
            cParamInfo[]    = sMotor_rotate_degreesParamInfo.eParamInfo;
            cParamInfo[]    = sMotor_rotate_speed_absParamInfo.eParamInfo;
            cParamInfo[]    = sMotor_rotate_blockingParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_rotate_degreesParamInfo {
            name            = "degrees";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_rotate_speed_absParamInfo {
            name            = "speed_abs";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_rotate_blockingParamInfo {
            name            = "blocking";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_initializePortFunctionInfo {
            name            = "initializePort";
            bOneway         = false;
            cParamInfo[]    = sMotor_initializePort_typeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_initializePort_typeParamInfo {
            name            = "type";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };

        /*** sButton signature information ****/
        cell nTECSInfo::tSignatureInfo sButtonSignatureInfo {
            name            = "sButton";
            cFunctionInfo[] = sButton_isPressedFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sButton_isPressedFunctionInfo {
            name            = "isPressed";
            bOneway         = false;
            cParamInfo[]    = sButton_isPressed_buttonParamInfo.eParamInfo;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sButton_isPressed_buttonParamInfo {
            name            = "button";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = button_tTypeInfo.eTypeInfo;
        };

        /*** sLCD signature information ****/
        cell nTECSInfo::tSignatureInfo sLCDSignatureInfo {
            name            = "sLCD";
            cFunctionInfo[] = sLCD_setFontFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_getFontSizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_drawStringFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_fillRectFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_drawLineFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_printFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_putsFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_clearFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_showMessageBoxFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_setFontFunctionInfo {
            name            = "setFont";
            bOneway         = false;
            cParamInfo[]    = sLCD_setFont_fontParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_setFont_fontParamInfo {
            name            = "font";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = lcdfont_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_getFontSizeFunctionInfo {
            name            = "getFontSize";
            bOneway         = false;
            cParamInfo[]    = sLCD_getFontSize_fontParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_getFontSize_p_widthParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_getFontSize_p_heightParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_getFontSize_fontParamInfo {
            name            = "font";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = lcdfont_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_getFontSize_p_widthParamInfo {
            name            = "p_width";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_getFontSize_p_heightParamInfo {
            name            = "p_height";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_drawStringFunctionInfo {
            name            = "drawString";
            bOneway         = false;
            cParamInfo[]    = sLCD_drawString_strParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawString_xParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawString_yParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawString_strParamInfo {
            name            = "str";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawString_xParamInfo {
            name            = "x";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawString_yParamInfo {
            name            = "y";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_fillRectFunctionInfo {
            name            = "fillRect";
            bOneway         = false;
            cParamInfo[]    = sLCD_fillRect_xParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_yParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_wParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_hParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_colorParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_xParamInfo {
            name            = "x";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_yParamInfo {
            name            = "y";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_wParamInfo {
            name            = "w";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_hParamInfo {
            name            = "h";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_colorParamInfo {
            name            = "color";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = lcdcolor_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_drawLineFunctionInfo {
            name            = "drawLine";
            bOneway         = false;
            cParamInfo[]    = sLCD_drawLine_x0ParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawLine_y0ParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawLine_x1ParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawLine_y1ParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_x0ParamInfo {
            name            = "x0";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_y0ParamInfo {
            name            = "y0";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_x1ParamInfo {
            name            = "x1";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_y1ParamInfo {
            name            = "y1";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_printFunctionInfo {
            name            = "print";
            bOneway         = false;
            cParamInfo[]    = sLCD_print_strParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_print_strParamInfo {
            name            = "str";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_putsFunctionInfo {
            name            = "puts";
            bOneway         = false;
            cParamInfo[]    = sLCD_puts_strParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_puts_strParamInfo {
            name            = "str";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_clearFunctionInfo {
            name            = "clear";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_showMessageBoxFunctionInfo {
            name            = "showMessageBox";
            bOneway         = false;
            cParamInfo[]    = sLCD_showMessageBox_titleParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_showMessageBox_msgParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_showMessageBox_titleParamInfo {
            name            = "title";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_showMessageBox_msgParamInfo {
            name            = "msg";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sLED signature information ****/
        cell nTECSInfo::tSignatureInfo sLEDSignatureInfo {
            name            = "sLED";
            cFunctionInfo[] = sLED_setColorFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLED_offFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sLED_setColorFunctionInfo {
            name            = "setColor";
            bOneway         = false;
            cParamInfo[]    = sLED_setColor_colorParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLED_setColor_colorParamInfo {
            name            = "color";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = ledcolor_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLED_offFunctionInfo {
            name            = "off";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sBattery signature information ****/
        cell nTECSInfo::tSignatureInfo sBatterySignatureInfo {
            name            = "sBattery";
            cFunctionInfo[] = sBattery_current_mAFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sBattery_voltage_mVFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sBattery_current_mAFunctionInfo {
            name            = "current_mA";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sBattery_voltage_mVFunctionInfo {
            name            = "voltage_mV";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };

        /*** sSpeaker signature information ****/
        cell nTECSInfo::tSignatureInfo sSpeakerSignatureInfo {
            name            = "sSpeaker";
            cFunctionInfo[] = sSpeaker_setVolumeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSpeaker_playToneFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSpeaker_stopFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sSpeaker_setVolumeFunctionInfo {
            name            = "setVolume";
            bOneway         = false;
            cParamInfo[]    = sSpeaker_setVolume_volumeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSpeaker_setVolume_volumeParamInfo {
            name            = "volume";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSpeaker_playToneFunctionInfo {
            name            = "playTone";
            bOneway         = false;
            cParamInfo[]    = sSpeaker_playTone_frequencyParamInfo.eParamInfo;
            cParamInfo[]    = sSpeaker_playTone_durationParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSpeaker_playTone_frequencyParamInfo {
            name            = "frequency";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSpeaker_playTone_durationParamInfo {
            name            = "duration";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSpeaker_stopFunctionInfo {
            name            = "stop";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sRiteVM signature information ****/
        cell nTECSInfo::tSignatureInfo sRiteVMSignatureInfo {
            name            = "sRiteVM";
            cFunctionInfo[] = sRiteVM_resetFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sRiteVM_resetFunctionInfo {
            name            = "reset";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sBalancer signature information ****/
        cell nTECSInfo::tSignatureInfo sBalancerSignatureInfo {
            name            = "sBalancer";
            cFunctionInfo[] = sBalancer_controlFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sBalancer_initFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sBalancer_controlFunctionInfo {
            name            = "control";
            bOneway         = false;
            cParamInfo[]    = sBalancer_control_forwardParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_turnParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_gyroParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_gyroOffsetParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_leftRevolutionParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_rightRevolutionParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_batteryParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_pwm_lParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_pwm_rParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_backlashhalfParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_forwardParamInfo {
            name            = "forward";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_turnParamInfo {
            name            = "turn";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_gyroParamInfo {
            name            = "gyro";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_gyroOffsetParamInfo {
            name            = "gyroOffset";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_leftRevolutionParamInfo {
            name            = "leftRevolution";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_rightRevolutionParamInfo {
            name            = "rightRevolution";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_batteryParamInfo {
            name            = "battery";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_pwm_lParamInfo {
            name            = "pwm_l";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_pwm_rParamInfo {
            name            = "pwm_r";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_backlashhalfParamInfo {
            name            = "backlashhalf";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sBalancer_initFunctionInfo {
            name            = "init";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sSharedMemory signature information ****/
        cell nTECSInfo::tSignatureInfo sSharedMemorySignatureInfo {
            name            = "sSharedMemory";
            cFunctionInfo[] = sSharedMemory_putValFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSharedMemory_getValFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSharedMemory_getSizeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sSharedMemory_putValFunctionInfo {
            name            = "putVal";
            bOneway         = false;
            cParamInfo[]    = sSharedMemory_putVal_indexParamInfo.eParamInfo;
            cParamInfo[]    = sSharedMemory_putVal_valParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSharedMemory_putVal_indexParamInfo {
            name            = "index";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSharedMemory_putVal_valParamInfo {
            name            = "val";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSharedMemory_getValFunctionInfo {
            name            = "getVal";
            bOneway         = false;
            cParamInfo[]    = sSharedMemory_getVal_indexParamInfo.eParamInfo;
            cReturnTypeInfo = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSharedMemory_getVal_indexParamInfo {
            name            = "index";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSharedMemory_getSizeFunctionInfo {
            name            = "getSize";
            bOneway         = false;
            cReturnTypeInfo = int32_tTypeInfo.eTypeInfo;
        };

        /*** sTarget1 signature information ****/
        cell nTECSInfo::tSignatureInfo sTarget1SignatureInfo {
            name            = "sTarget1";
            cFunctionInfo[] = sTarget1_doubleFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTarget1_doubleFunctionInfo {
            name            = "double";
            bOneway         = false;
            cParamInfo[]    = sTarget1_double_argParamInfo.eParamInfo;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget1_double_argParamInfo {
            name            = "arg";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };

        /*** sTarget2 signature information ****/
        cell nTECSInfo::tSignatureInfo sTarget2SignatureInfo {
            name            = "sTarget2";
            cFunctionInfo[] = sTarget2_addFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTarget2_addFunctionInfo {
            name            = "add";
            bOneway         = false;
            cParamInfo[]    = sTarget2_add_arg1ParamInfo.eParamInfo;
            cParamInfo[]    = sTarget2_add_arg2ParamInfo.eParamInfo;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget2_add_arg1ParamInfo {
            name            = "arg1";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget2_add_arg2ParamInfo {
            name            = "arg2";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };

        /*** sTarget3 signature information ****/
        cell nTECSInfo::tSignatureInfo sTarget3SignatureInfo {
            name            = "sTarget3";
            cFunctionInfo[] = sTarget3_sendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTarget3_sendMessageFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTarget3_receiveMessageFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTarget3_checkERFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTarget3_sendFunctionInfo {
            name            = "send";
            bOneway         = false;
            cParamInfo[]    = sTarget3_send_bufParamInfo.eParamInfo;
            cParamInfo[]    = sTarget3_send_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget3_send_bufParamInfo {
            name            = "buf";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget3_send_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTarget3_sendMessageFunctionInfo {
            name            = "sendMessage";
            bOneway         = false;
            cParamInfo[]    = sTarget3_sendMessage_bufParamInfo.eParamInfo;
            cParamInfo[]    = sTarget3_sendMessage_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget3_sendMessage_bufParamInfo {
            name            = "buf";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget3_sendMessage_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTarget3_receiveMessageFunctionInfo {
            name            = "receiveMessage";
            bOneway         = false;
            cParamInfo[]    = sTarget3_receiveMessage_bufParamInfo.eParamInfo;
            cParamInfo[]    = sTarget3_receiveMessage_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget3_receiveMessage_bufParamInfo {
            name            = "buf";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget3_receiveMessage_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTarget3_checkERFunctionInfo {
            name            = "checkER";
            bOneway         = false;
            cParamInfo[]    = sTarget3_checkER_eroorParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTarget3_checkER_eroorParamInfo {
            name            = "eroor";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tTaskCelltypeInfo {
            name             = "tTask";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tTask__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tTask__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tTask__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tTask__NCELLINLINKUNIT" );
            n_cellInSystem   = 2;
            cEntryInfo[]    = tTask_eTaskEntryInfo.eEntryInfo;
            cEntryInfo[]    = tTask_eiTaskEntryInfo.eEntryInfo;
            cCallInfo[]     = tTask_cBodyCallInfo.eCallInfo;
            cCallInfo[]     = tTask_cExceptionBodyCallInfo.eCallInfo;
            cAttrInfo[]     = tTask_idVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_taskAttributeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_exceptionAttributeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_priorityVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_stackSizeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_systemStackSizeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_userStackSizeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_accessPatternVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tTask_eTaskEntryInfo{
            name            = "eTask";
            cSignatureInfo  = sTaskSignatureInfo.eSignatureInfo;
            b_inline        = true;
            array_size      = C_EXP( "tTask_eTask__array_size" );
        };
        cell nTECSInfo::tEntryInfo tTask_eiTaskEntryInfo{
            name            = "eiTask";
            cSignatureInfo  = siTaskSignatureInfo.eSignatureInfo;
            b_inline        = true;
            array_size      = C_EXP( "tTask_eiTask__array_size" );
        };
        cell nTECSInfo::tCallInfo tTask_cBodyCallInfo{
            name            = "cBody";
            cSignatureInfo  = sTaskBodySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTask_cBody__offset" );
            array_size        = C_EXP( "tTask_cBody__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTask_cBody__place" );
            b_VMT_useless     = C_EXP( "tTask_cBody__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTask_cBody__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTask_cBody__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTask_cExceptionBodyCallInfo{
            name            = "cExceptionBody";
            cSignatureInfo  = sTaskExceptionBodySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTask_cExceptionBody__offset" );
            array_size        = C_EXP( "tTask_cExceptionBody__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTask_cExceptionBody__place" );
            b_VMT_useless     = C_EXP( "tTask_cExceptionBody__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTask_cExceptionBody__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTask_cExceptionBody__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo tTask_idVarDeclInfo {
            name            = "id";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_id" );
            place           = C_EXP( "PLACE_OF_tTask_id" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_taskAttributeVarDeclInfo {
            name            = "taskAttribute";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_taskAttribute" );
            place           = C_EXP( "PLACE_OF_tTask_taskAttribute" );
            cTypeInfo       = ATRTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_exceptionAttributeVarDeclInfo {
            name            = "exceptionAttribute";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_exceptionAttribute" );
            place           = C_EXP( "PLACE_OF_tTask_exceptionAttribute" );
            cTypeInfo       = ATRTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_priorityVarDeclInfo {
            name            = "priority";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_priority" );
            place           = C_EXP( "PLACE_OF_tTask_priority" );
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_stackSizeVarDeclInfo {
            name            = "stackSize";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_stackSize" );
            place           = C_EXP( "PLACE_OF_tTask_stackSize" );
            cTypeInfo       = SIZETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_systemStackSizeVarDeclInfo {
            name            = "systemStackSize";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_systemStackSize" );
            place           = C_EXP( "PLACE_OF_tTask_systemStackSize" );
            cTypeInfo       = SIZETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_userStackSizeVarDeclInfo {
            name            = "userStackSize";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_userStackSize" );
            place           = C_EXP( "PLACE_OF_tTask_userStackSize" );
            cTypeInfo       = SIZETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_accessPatternVarDeclInfo {
            name            = "accessPattern";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTask_accessPattern" );
            place           = C_EXP( "PLACE_OF_tTask_accessPattern" );
            cTypeInfo       = ACPTN_Array4_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tKernelCelltypeInfo {
            name             = "tKernel";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "tKernel__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tKernel__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tKernel__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tKernel__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tKernel_eKernelEntryInfo.eEntryInfo;
            cEntryInfo[]    = tKernel_eiKernelEntryInfo.eEntryInfo;
            cAttrInfo[]     = tKernel_accessPatternVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tKernel_eKernelEntryInfo{
            name            = "eKernel";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            b_inline        = true;
            array_size      = C_EXP( "tKernel_eKernel__array_size" );
        };
        cell nTECSInfo::tEntryInfo tKernel_eiKernelEntryInfo{
            name            = "eiKernel";
            cSignatureInfo  = siKernelSignatureInfo.eSignatureInfo;
            b_inline        = true;
            array_size      = C_EXP( "tKernel_eiKernel__array_size" );
        };
        cell nTECSInfo::tVarDeclInfo tKernel_accessPatternVarDeclInfo {
            name            = "accessPattern";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tKernel_accessPattern" );
            place           = C_EXP( "PLACE_OF_tKernel_accessPattern" );
            cTypeInfo       = ACPTN_Array4_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tUltrasonicSensorCelltypeInfo {
            name             = "tUltrasonicSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tUltrasonicSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tUltrasonicSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tUltrasonicSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tUltrasonicSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cEntryInfo[]    = tUltrasonicSensor_eUltrasonicSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tUltrasonicSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tUltrasonicSensor_eUltrasonicSensorEntryInfo{
            name            = "eUltrasonicSensor";
            cSignatureInfo  = sUltrasonicSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tUltrasonicSensor_eUltrasonicSensor__array_size" );
        };
        cell nTECSInfo::tVarDeclInfo tUltrasonicSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tUltrasonicSensor_port" );
            place           = C_EXP( "PLACE_OF_tUltrasonicSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tColorSensorCelltypeInfo {
            name             = "tColorSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tColorSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tColorSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tColorSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tColorSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cEntryInfo[]    = tColorSensor_eColorSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tColorSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tColorSensor_eColorSensorEntryInfo{
            name            = "eColorSensor";
            cSignatureInfo  = sColorSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tColorSensor_eColorSensor__array_size" );
        };
        cell nTECSInfo::tVarDeclInfo tColorSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tColorSensor_port" );
            place           = C_EXP( "PLACE_OF_tColorSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tTouchSensorCelltypeInfo {
            name             = "tTouchSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tTouchSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tTouchSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tTouchSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tTouchSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cEntryInfo[]    = tTouchSensor_eTouchSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tTouchSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tTouchSensor_eTouchSensorEntryInfo{
            name            = "eTouchSensor";
            cSignatureInfo  = sTouchSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tTouchSensor_eTouchSensor__array_size" );
        };
        cell nTECSInfo::tVarDeclInfo tTouchSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTouchSensor_port" );
            place           = C_EXP( "PLACE_OF_tTouchSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tGyroSensorCelltypeInfo {
            name             = "tGyroSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tGyroSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tGyroSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tGyroSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tGyroSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cEntryInfo[]    = tGyroSensor_eGyroSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tGyroSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tGyroSensor_eGyroSensorEntryInfo{
            name            = "eGyroSensor";
            cSignatureInfo  = sGyroSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tGyroSensor_eGyroSensor__array_size" );
        };
        cell nTECSInfo::tVarDeclInfo tGyroSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tGyroSensor_port" );
            place           = C_EXP( "PLACE_OF_tGyroSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tMotorCelltypeInfo {
            name             = "tMotor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tMotor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tMotor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tMotor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tMotor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cEntryInfo[]    = tMotor_eMotorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tMotor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tMotor_eMotorEntryInfo{
            name            = "eMotor";
            cSignatureInfo  = sMotorSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tMotor_eMotor__array_size" );
        };
        cell nTECSInfo::tVarDeclInfo tMotor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tMotor_port" );
            place           = C_EXP( "PLACE_OF_tMotor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tButtonCelltypeInfo {
            name             = "tButton";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tButton__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tButton__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tButton__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tButton__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tButton_eButtonEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tButton_eButtonEntryInfo{
            name            = "eButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tButton_eButton__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo tLCDCelltypeInfo {
            name             = "tLCD";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tLCD__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tLCD__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tLCD__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tLCD__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tLCD_eLCDEntryInfo.eEntryInfo;
            cCallInfo[]     = tLCD_cButtonCallInfo.eCallInfo;
            cVarInfo[]      = tLCD_currentFontVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tLCD_eLCDEntryInfo{
            name            = "eLCD";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tLCD_eLCD__array_size" );
        };
        cell nTECSInfo::tCallInfo tLCD_cButtonCallInfo{
            name            = "cButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tLCD_cButton__offset" );
            array_size        = C_EXP( "tLCD_cButton__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tLCD_cButton__place" );
            b_VMT_useless     = C_EXP( "tLCD_cButton__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tLCD_cButton__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tLCD_cButton__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo tLCD_currentFontVarDeclInfo {
            name            = "currentFont";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_VAR;
            offset          = C_EXP( "OFFSET_OF_tLCD_currentFont" );
            place           = C_EXP( "PLACE_OF_tLCD_currentFont" );
            cTypeInfo       = lcdfont_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tLEDCelltypeInfo {
            name             = "tLED";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tLED__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tLED__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tLED__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tLED__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tLED_eLEDEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tLED_eLEDEntryInfo{
            name            = "eLED";
            cSignatureInfo  = sLEDSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tLED_eLED__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo tBatteryCelltypeInfo {
            name             = "tBattery";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tBattery__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tBattery__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tBattery__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tBattery__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tBattery_eBatteryEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tBattery_eBatteryEntryInfo{
            name            = "eBattery";
            cSignatureInfo  = sBatterySignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tBattery_eBattery__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo tSpeakerCelltypeInfo {
            name             = "tSpeaker";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "tSpeaker__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tSpeaker__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tSpeaker__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tSpeaker__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tSpeaker_eSpeakerEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tSpeaker_eSpeakerEntryInfo{
            name            = "eSpeaker";
            cSignatureInfo  = sSpeakerSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tSpeaker_eSpeaker__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo tEV3PlatformCelltypeInfo {
            name             = "tEV3Platform";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tEV3Platform__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tEV3Platform__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tEV3Platform__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tEV3Platform__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tEV3Platform_eTaskBodyEntryInfo.eEntryInfo;
            cCallInfo[]     = tEV3Platform_cRiteVMCallInfo.eCallInfo;
            cCallInfo[]     = tEV3Platform_cTaskCallInfo.eCallInfo;
        };
        cell nTECSInfo::tEntryInfo tEV3Platform_eTaskBodyEntryInfo{
            name            = "eTaskBody";
            cSignatureInfo  = sTaskBodySignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tEV3Platform_eTaskBody__array_size" );
        };
        cell nTECSInfo::tCallInfo tEV3Platform_cRiteVMCallInfo{
            name            = "cRiteVM";
            cSignatureInfo  = sRiteVMSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tEV3Platform_cRiteVM__offset" );
            array_size        = C_EXP( "tEV3Platform_cRiteVM__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tEV3Platform_cRiteVM__place" );
            b_VMT_useless     = C_EXP( "tEV3Platform_cRiteVM__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tEV3Platform_cRiteVM__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tEV3Platform_cRiteVM__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tEV3Platform_cTaskCallInfo{
            name            = "cTask";
            cSignatureInfo  = sTaskSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tEV3Platform_cTask__offset" );
            array_size        = C_EXP( "tEV3Platform_cTask__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tEV3Platform_cTask__place" );
            b_VMT_useless     = C_EXP( "tEV3Platform_cTask__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tEV3Platform_cTask__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tEV3Platform_cTask__b_cell_unique" );

        };
        cell nTECSInfo::tCelltypeInfo tBalancerCelltypeInfo {
            name             = "tBalancer";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "tBalancer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tBalancer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tBalancer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tBalancer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tBalancer_eBalancerEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tBalancer_eBalancerEntryInfo{
            name            = "eBalancer";
            cSignatureInfo  = sBalancerSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tBalancer_eBalancer__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo tSharedMemoryCelltypeInfo {
            name             = "tSharedMemory";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tSharedMemory__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tSharedMemory__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tSharedMemory__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tSharedMemory__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tSharedMemory_eSharedMemoryEntryInfo.eEntryInfo;
            cAttrInfo[]     = tSharedMemory_sizeVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tSharedMemory_dataVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tSharedMemory_eSharedMemoryEntryInfo{
            name            = "eSharedMemory";
            cSignatureInfo  = sSharedMemorySignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tSharedMemory_eSharedMemory__array_size" );
        };
        cell nTECSInfo::tVarDeclInfo tSharedMemory_sizeVarDeclInfo {
            name            = "size";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tSharedMemory_size" );
            place           = C_EXP( "PLACE_OF_tSharedMemory_size" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tSharedMemory_dataVarDeclInfo {
            name            = "data";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_VAR;
            offset          = C_EXP( "OFFSET_OF_tSharedMemory_data" );
            place           = C_EXP( "PLACE_OF_tSharedMemory_data" );
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tTarget1CelltypeInfo {
            name             = "tTarget1";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tTarget1__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tTarget1__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tTarget1__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tTarget1__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tTarget1_eTarget1EntryInfo.eEntryInfo;
            cCallInfo[]     = tTarget1_cLCDCallInfo.eCallInfo;
            cCallInfo[]     = tTarget1_cButtonCallInfo.eCallInfo;
            cCallInfo[]     = tTarget1_cKernelCallInfo.eCallInfo;
        };
        cell nTECSInfo::tEntryInfo tTarget1_eTarget1EntryInfo{
            name            = "eTarget1";
            cSignatureInfo  = sTarget1SignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tTarget1_eTarget1__array_size" );
        };
        cell nTECSInfo::tCallInfo tTarget1_cLCDCallInfo{
            name            = "cLCD";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget1_cLCD__offset" );
            array_size        = C_EXP( "tTarget1_cLCD__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget1_cLCD__place" );
            b_VMT_useless     = C_EXP( "tTarget1_cLCD__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget1_cLCD__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget1_cLCD__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTarget1_cButtonCallInfo{
            name            = "cButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget1_cButton__offset" );
            array_size        = C_EXP( "tTarget1_cButton__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget1_cButton__place" );
            b_VMT_useless     = C_EXP( "tTarget1_cButton__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget1_cButton__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget1_cButton__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTarget1_cKernelCallInfo{
            name            = "cKernel";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget1_cKernel__offset" );
            array_size        = C_EXP( "tTarget1_cKernel__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget1_cKernel__place" );
            b_VMT_useless     = C_EXP( "tTarget1_cKernel__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget1_cKernel__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget1_cKernel__b_cell_unique" );

        };
        cell nTECSInfo::tCelltypeInfo tTarget2CelltypeInfo {
            name             = "tTarget2";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tTarget2__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tTarget2__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tTarget2__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tTarget2__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tTarget2_eTarget2EntryInfo.eEntryInfo;
            cCallInfo[]     = tTarget2_cLCDCallInfo.eCallInfo;
            cCallInfo[]     = tTarget2_cButtonCallInfo.eCallInfo;
            cCallInfo[]     = tTarget2_cKernelCallInfo.eCallInfo;
        };
        cell nTECSInfo::tEntryInfo tTarget2_eTarget2EntryInfo{
            name            = "eTarget2";
            cSignatureInfo  = sTarget2SignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tTarget2_eTarget2__array_size" );
        };
        cell nTECSInfo::tCallInfo tTarget2_cLCDCallInfo{
            name            = "cLCD";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget2_cLCD__offset" );
            array_size        = C_EXP( "tTarget2_cLCD__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget2_cLCD__place" );
            b_VMT_useless     = C_EXP( "tTarget2_cLCD__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget2_cLCD__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget2_cLCD__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTarget2_cButtonCallInfo{
            name            = "cButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget2_cButton__offset" );
            array_size        = C_EXP( "tTarget2_cButton__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget2_cButton__place" );
            b_VMT_useless     = C_EXP( "tTarget2_cButton__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget2_cButton__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget2_cButton__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTarget2_cKernelCallInfo{
            name            = "cKernel";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget2_cKernel__offset" );
            array_size        = C_EXP( "tTarget2_cKernel__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget2_cKernel__place" );
            b_VMT_useless     = C_EXP( "tTarget2_cKernel__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget2_cKernel__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget2_cKernel__b_cell_unique" );

        };
        cell nTECSInfo::tCelltypeInfo tTarget3CelltypeInfo {
            name             = "tTarget3";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tTarget3__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tTarget3__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tTarget3__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tTarget3__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tTarget3_eTarget3EntryInfo.eEntryInfo;
            cCallInfo[]     = tTarget3_cLCDCallInfo.eCallInfo;
            cCallInfo[]     = tTarget3_cButtonCallInfo.eCallInfo;
            cCallInfo[]     = tTarget3_cKernelCallInfo.eCallInfo;
        };
        cell nTECSInfo::tEntryInfo tTarget3_eTarget3EntryInfo{
            name            = "eTarget3";
            cSignatureInfo  = sTarget3SignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tTarget3_eTarget3__array_size" );
        };
        cell nTECSInfo::tCallInfo tTarget3_cLCDCallInfo{
            name            = "cLCD";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget3_cLCD__offset" );
            array_size        = C_EXP( "tTarget3_cLCD__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget3_cLCD__place" );
            b_VMT_useless     = C_EXP( "tTarget3_cLCD__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget3_cLCD__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget3_cLCD__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTarget3_cButtonCallInfo{
            name            = "cButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget3_cButton__offset" );
            array_size        = C_EXP( "tTarget3_cButton__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget3_cButton__place" );
            b_VMT_useless     = C_EXP( "tTarget3_cButton__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget3_cButton__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget3_cButton__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTarget3_cKernelCallInfo{
            name            = "cKernel";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTarget3_cKernel__offset" );
            array_size        = C_EXP( "tTarget3_cKernel__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTarget3_cKernel__place" );
            b_VMT_useless     = C_EXP( "tTarget3_cKernel__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTarget3_cKernel__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTarget3_cKernel__b_cell_unique" );

        };
        cell nTECSInfo::tCelltypeInfo tTaskMainCelltypeInfo {
            name             = "tTaskMain";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "tTaskMain__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "tTaskMain__sizeOfCB" );
            sizeOfINIB       = C_EXP( "tTaskMain__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "tTaskMain__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = tTaskMain_eBodyEntryInfo.eEntryInfo;
            cCallInfo[]     = tTaskMain_cKernelCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cLCDCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cButtonCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cTECSInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cNSInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cRegionInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cCellInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cSignatureInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cCelltypeInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cVarDeclInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cTypeInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cTarget1CallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cREDInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cEntryInfoCallInfo.eCallInfo;
            cAttrInfo[]     = tTaskMain_NAME_LENVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_target_pathVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_rawDescVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tTaskMain_eBodyEntryInfo{
            name            = "eBody";
            cSignatureInfo  = sTaskBodySignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "tTaskMain_eBody__array_size" );
        };
        cell nTECSInfo::tCallInfo tTaskMain_cKernelCallInfo{
            name            = "cKernel";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cKernel__offset" );
            array_size        = C_EXP( "tTaskMain_cKernel__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cKernel__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cKernel__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cKernel__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cKernel__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cLCDCallInfo{
            name            = "cLCD";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cLCD__offset" );
            array_size        = C_EXP( "tTaskMain_cLCD__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cLCD__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cLCD__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cLCD__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cLCD__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cButtonCallInfo{
            name            = "cButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cButton__offset" );
            array_size        = C_EXP( "tTaskMain_cButton__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cButton__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cButton__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cButton__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cButton__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cTECSInfoCallInfo{
            name            = "cTECSInfo";
            cSignatureInfo  = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cTECSInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cTECSInfo__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cTECSInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cTECSInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cTECSInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cTECSInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cNSInfoCallInfo{
            name            = "cNSInfo";
            cSignatureInfo  = nTECSInfo_sNamespaceInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cNSInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cNSInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cNSInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cNSInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cNSInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cNSInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cRegionInfoCallInfo{
            name            = "cRegionInfo";
            cSignatureInfo  = nTECSInfo_sRegionInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cRegionInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cRegionInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cRegionInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cRegionInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cRegionInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cRegionInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cCellInfoCallInfo{
            name            = "cCellInfo";
            cSignatureInfo  = nTECSInfo_sCellInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cCellInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cCellInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cCellInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cCellInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cCellInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cCellInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cSignatureInfoCallInfo{
            name            = "cSignatureInfo";
            cSignatureInfo  = nTECSInfo_sSignatureInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cSignatureInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cSignatureInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cSignatureInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cSignatureInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cSignatureInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cSignatureInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cCelltypeInfoCallInfo{
            name            = "cCelltypeInfo";
            cSignatureInfo  = nTECSInfo_sCelltypeInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cCelltypeInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cCelltypeInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cCelltypeInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cCelltypeInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cCelltypeInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cCelltypeInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cVarDeclInfoCallInfo{
            name            = "cVarDeclInfo";
            cSignatureInfo  = nTECSInfo_sVarDeclInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cVarDeclInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cVarDeclInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cVarDeclInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cVarDeclInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cVarDeclInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cVarDeclInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cTypeInfoCallInfo{
            name            = "cTypeInfo";
            cSignatureInfo  = nTECSInfo_sTypeInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cTypeInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cTypeInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cTypeInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cTypeInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cTypeInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cTypeInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cTarget1CallInfo{
            name            = "cTarget1";
            cSignatureInfo  = sTarget1SignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cTarget1__offset" );
            array_size        = C_EXP( "tTaskMain_cTarget1__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cTarget1__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cTarget1__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cTarget1__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cTarget1__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cREDInfoCallInfo{
            name            = "cREDInfo";
            cSignatureInfo  = nTECSInfo_sRawEntryDescriptorInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cREDInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cREDInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cREDInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cREDInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cREDInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cREDInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cEntryInfoCallInfo{
            name            = "cEntryInfo";
            cSignatureInfo  = nTECSInfo_sEntryInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cEntryInfo__offset" );
            array_size        = C_EXP( "tTaskMain_cEntryInfo__array_size" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cEntryInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cEntryInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cEntryInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cEntryInfo__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_NAME_LENVarDeclInfo {
            name            = "NAME_LEN";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_NAME_LEN" );
            place           = C_EXP( "PLACE_OF_tTaskMain_NAME_LEN" );
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_target_pathVarDeclInfo {
            name            = "target_path";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_VAR;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_target_path" );
            place           = C_EXP( "PLACE_OF_tTaskMain_target_path" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_rawDescVarDeclInfo {
            name            = "rawDesc";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_VAR;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_rawDesc" );
            place           = C_EXP( "PLACE_OF_tTaskMain_rawDesc" );
            cTypeInfo       = void_Ptr_TypeInfo.eTypeInfo;
        };

        /*** ::nMruby namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo nMrubyNamespaceInfo{
            name = "nMruby";

            /* SIGNATURE info */
            cSignatureInfo[] = nMruby_sInitializeBridgeSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nMruby_sMrubyVMSignatureInfo.eSignatureInfo;

            /* CELLTYPE info */
            cCelltypeInfo[] = nMruby_tTECSInitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tCharPointerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tInt8PointerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tInt32PointerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tUInt16PointerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tIntPointerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tULongPointerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsKernelCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsKernel_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsMotorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsMotor_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsLCDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsLCD_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsLEDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsLED_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsButtonCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsButton_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsBatteryCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsBattery_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsSpeakerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsSpeaker_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsUltrasonicSensor_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsGyroSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsGyroSensor_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsColorSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsColorSensor_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsTouchSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsTouchSensor_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsBalancerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsBalancer_InitializerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsSharedMemoryCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsSharedMemory_InitializerCelltypeInfo.eCelltypeInfo;
        };   /* cell nTECSInfo::tNamespaceInfo nMrubyNamespaceInfo */

        /*** nMruby_sInitializeBridge signature information ****/
        cell nTECSInfo::tSignatureInfo nMruby_sInitializeBridgeSignatureInfo {
            name            = "sInitializeBridge";
            cFunctionInfo[] = nMruby_sInitializeBridge_initializeBridgeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sInitializeBridge_initializeBridgeFunctionInfo {
            name            = "initializeBridge";
            bOneway         = false;
            cParamInfo[]    = nMruby_sInitializeBridge_initializeBridge_mrbParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sInitializeBridge_initializeBridge_mrbParamInfo {
            name            = "mrb";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__mrb_state_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nMruby_sInitializeTECSBridge signature information ****/
        cell nTECSInfo::tSignatureInfo nMruby_sInitializeTECSBridgeSignatureInfo {
            name            = "sInitializeTECSBridge";
            cFunctionInfo[] = nMruby_sInitializeTECSBridge_initializeBridgeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sInitializeTECSBridge_initializeBridgeFunctionInfo {
            name            = "initializeBridge";
            bOneway         = false;
            cParamInfo[]    = nMruby_sInitializeTECSBridge_initializeBridge_mrbParamInfo.eParamInfo;
            cParamInfo[]    = nMruby_sInitializeTECSBridge_initializeBridge_TECSParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sInitializeTECSBridge_initializeBridge_mrbParamInfo {
            name            = "mrb";
            dir             = PARAM_DIR_INOUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = mrb_state_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sInitializeTECSBridge_initializeBridge_TECSParamInfo {
            name            = "TECS";
            dir             = PARAM_DIR_INOUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = struct__RClass_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo struct__RClass_gcnextVarDeclInfo {
            name            = "gcnext";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_struct__RClass_gcnext" );
            place           = C_EXP( "PLACE_OF_struct__RClass_gcnext" );
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };

        /*** nMruby_sMrubyVM signature information ****/
        cell nTECSInfo::tSignatureInfo nMruby_sMrubyVMSignatureInfo {
            name            = "sMrubyVM";
            cFunctionInfo[] = nMruby_sMrubyVM_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nMruby_sMrubyVM_runFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nMruby_sMrubyVM_funcallFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nMruby_sMrubyVM_finalizeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_initializeFunctionInfo {
            name            = "initialize";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_runFunctionInfo {
            name            = "run";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_funcallFunctionInfo {
            name            = "funcall";
            bOneway         = false;
            cParamInfo[]    = nMruby_sMrubyVM_funcall_nameParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sMrubyVM_funcall_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_finalizeFunctionInfo {
            name            = "finalize";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tTECSInitializerCelltypeInfo {
            name             = "tTECSInitializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tTECSInitializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tTECSInitializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tTECSInitializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tTECSInitializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tTECSInitializer_eInitializeEntryInfo.eEntryInfo;
            cCallInfo[]     = nMruby_tTECSInitializer_cInitializeCallInfo.eCallInfo;
            cVarInfo[]      = nMruby_tTECSInitializer_TECSVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tTECSInitializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tTECSInitializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCallInfo nMruby_tTECSInitializer_cInitializeCallInfo{
            name            = "cInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tTECSInitializer_cInitialize__offset" );
            array_size        = C_EXP( "nMruby_tTECSInitializer_cInitialize__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tTECSInitializer_cInitialize__place" );
            b_VMT_useless     = C_EXP( "nMruby_tTECSInitializer_cInitialize__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tTECSInitializer_cInitialize__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tTECSInitializer_cInitialize__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tTECSInitializer_TECSVarDeclInfo {
            name            = "TECS";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_VAR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tTECSInitializer_TECS" );
            place           = C_EXP( "PLACE_OF_nMruby_tTECSInitializer_TECS" );
            cTypeInfo       = struct__RClass_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tCharPointerCelltypeInfo {
            name             = "tCharPointer";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tCharPointer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tCharPointer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tCharPointer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tCharPointer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tCharPointer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tCharPointer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tCharPointer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tInt8PointerCelltypeInfo {
            name             = "tInt8Pointer";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tInt8Pointer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tInt8Pointer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tInt8Pointer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tInt8Pointer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tInt8Pointer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tInt8Pointer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tInt8Pointer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tInt32PointerCelltypeInfo {
            name             = "tInt32Pointer";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tInt32Pointer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tInt32Pointer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tInt32Pointer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tInt32Pointer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tInt32Pointer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tInt32Pointer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tInt32Pointer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tUInt16PointerCelltypeInfo {
            name             = "tUInt16Pointer";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tUInt16Pointer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tUInt16Pointer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tUInt16Pointer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tUInt16Pointer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tUInt16Pointer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tUInt16Pointer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tUInt16Pointer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tIntPointerCelltypeInfo {
            name             = "tIntPointer";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tIntPointer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tIntPointer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tIntPointer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tIntPointer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tIntPointer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tIntPointer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tIntPointer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tULongPointerCelltypeInfo {
            name             = "tULongPointer";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tULongPointer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tULongPointer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tULongPointer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tULongPointer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tULongPointer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tULongPointer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tULongPointer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsKernelCelltypeInfo {
            name             = "tsKernel";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsKernel__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsKernel__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsKernel__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsKernel__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsKernel_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsKernel_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsKernel_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsKernel_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsKernel_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsKernel_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsKernel_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsKernel_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsKernel_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsKernel_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsKernel_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsKernel_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsKernel_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsKernel_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsKernel_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsKernel_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsKernel_InitializerCelltypeInfo {
            name             = "tsKernel_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsKernel_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsKernel_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsKernel_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsKernel_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsKernel_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsKernel_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsKernel_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsMotorCelltypeInfo {
            name             = "tsMotor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsMotor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsMotor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsMotor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsMotor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cCallInfo[]     = nMruby_tsMotor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsMotor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsMotor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsMotor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sMotorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsMotor_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsMotor_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsMotor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsMotor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsMotor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsMotor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsMotor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsMotor_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsMotor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsMotor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsMotor_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsMotor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsMotor_InitializerCelltypeInfo {
            name             = "tsMotor_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsMotor_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsMotor_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsMotor_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsMotor_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsMotor_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsMotor_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsMotor_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsLCDCelltypeInfo {
            name             = "tsLCD";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsLCD__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsLCD__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsLCD__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsLCD__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsLCD_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsLCD_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsLCD_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsLCD_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsLCD_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsLCD_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsLCD_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsLCD_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsLCD_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsLCD_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLCD_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLCD_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsLCD_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLCD_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLCD_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsLCD_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsLCD_InitializerCelltypeInfo {
            name             = "tsLCD_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsLCD_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsLCD_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsLCD_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsLCD_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsLCD_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsLCD_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsLCD_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsLEDCelltypeInfo {
            name             = "tsLED";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsLED__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsLED__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsLED__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsLED__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsLED_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsLED_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsLED_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsLED_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sLEDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsLED_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsLED_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsLED_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsLED_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsLED_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsLED_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLED_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLED_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsLED_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLED_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLED_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsLED_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsLED_InitializerCelltypeInfo {
            name             = "tsLED_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsLED_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsLED_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsLED_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsLED_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsLED_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsLED_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsLED_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsButtonCelltypeInfo {
            name             = "tsButton";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsButton__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsButton__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsButton__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsButton__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsButton_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsButton_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsButton_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsButton_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsButton_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsButton_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsButton_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsButton_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsButton_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsButton_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsButton_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsButton_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsButton_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsButton_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsButton_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsButton_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsButton_InitializerCelltypeInfo {
            name             = "tsButton_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsButton_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsButton_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsButton_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsButton_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsButton_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsButton_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsButton_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsBatteryCelltypeInfo {
            name             = "tsBattery";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsBattery__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsBattery__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsBattery__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsBattery__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsBattery_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsBattery_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsBattery_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsBattery_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sBatterySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsBattery_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsBattery_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsBattery_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsBattery_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsBattery_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsBattery_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBattery_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBattery_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsBattery_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBattery_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBattery_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsBattery_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsBattery_InitializerCelltypeInfo {
            name             = "tsBattery_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsBattery_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsBattery_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsBattery_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsBattery_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsBattery_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsBattery_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsBattery_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsSpeakerCelltypeInfo {
            name             = "tsSpeaker";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsSpeaker__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsSpeaker__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsSpeaker__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsSpeaker__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsSpeaker_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsSpeaker_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsSpeaker_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsSpeaker_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sSpeakerSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsSpeaker_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsSpeaker_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsSpeaker_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsSpeaker_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsSpeaker_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsSpeaker_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSpeaker_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSpeaker_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsSpeaker_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSpeaker_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSpeaker_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsSpeaker_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsSpeaker_InitializerCelltypeInfo {
            name             = "tsSpeaker_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsSpeaker_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsSpeaker_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsSpeaker_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsSpeaker_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsSpeaker_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsSpeaker_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsSpeaker_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsUltrasonicSensorCelltypeInfo {
            name             = "tsUltrasonicSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsUltrasonicSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsUltrasonicSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsUltrasonicSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsUltrasonicSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cCallInfo[]     = nMruby_tsUltrasonicSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsUltrasonicSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsUltrasonicSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsUltrasonicSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sUltrasonicSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsUltrasonicSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsUltrasonicSensor_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsUltrasonicSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsUltrasonicSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsUltrasonicSensor_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsUltrasonicSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsUltrasonicSensor_InitializerCelltypeInfo {
            name             = "tsUltrasonicSensor_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsUltrasonicSensor_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsUltrasonicSensor_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsUltrasonicSensor_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsUltrasonicSensor_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsUltrasonicSensor_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsUltrasonicSensor_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsUltrasonicSensor_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsGyroSensorCelltypeInfo {
            name             = "tsGyroSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsGyroSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsGyroSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsGyroSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsGyroSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cCallInfo[]     = nMruby_tsGyroSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsGyroSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsGyroSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsGyroSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sGyroSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsGyroSensor_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsGyroSensor_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsGyroSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsGyroSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsGyroSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsGyroSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsGyroSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsGyroSensor_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsGyroSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsGyroSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsGyroSensor_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsGyroSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsGyroSensor_InitializerCelltypeInfo {
            name             = "tsGyroSensor_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsGyroSensor_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsGyroSensor_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsGyroSensor_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsGyroSensor_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsGyroSensor_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsGyroSensor_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsGyroSensor_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsColorSensorCelltypeInfo {
            name             = "tsColorSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsColorSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsColorSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsColorSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsColorSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cCallInfo[]     = nMruby_tsColorSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsColorSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsColorSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsColorSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sColorSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsColorSensor_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsColorSensor_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsColorSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsColorSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsColorSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsColorSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsColorSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsColorSensor_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsColorSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsColorSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsColorSensor_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsColorSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsColorSensor_InitializerCelltypeInfo {
            name             = "tsColorSensor_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsColorSensor_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsColorSensor_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsColorSensor_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsColorSensor_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsColorSensor_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsColorSensor_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsColorSensor_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsTouchSensorCelltypeInfo {
            name             = "tsTouchSensor";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsTouchSensor__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsTouchSensor__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsTouchSensor__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsTouchSensor__NCELLINLINKUNIT" );
            n_cellInSystem   = 4;
            cCallInfo[]     = nMruby_tsTouchSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsTouchSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsTouchSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsTouchSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sTouchSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsTouchSensor_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsTouchSensor_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsTouchSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsTouchSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsTouchSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsTouchSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsTouchSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsTouchSensor_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsTouchSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsTouchSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsTouchSensor_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsTouchSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsTouchSensor_InitializerCelltypeInfo {
            name             = "tsTouchSensor_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsTouchSensor_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsTouchSensor_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsTouchSensor_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsTouchSensor_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsTouchSensor_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsTouchSensor_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsTouchSensor_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsBalancerCelltypeInfo {
            name             = "tsBalancer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsBalancer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsBalancer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsBalancer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsBalancer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsBalancer_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsBalancer_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsBalancer_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsBalancer_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sBalancerSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsBalancer_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsBalancer_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsBalancer_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsBalancer_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsBalancer_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsBalancer_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBalancer_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBalancer_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsBalancer_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBalancer_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBalancer_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsBalancer_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsBalancer_InitializerCelltypeInfo {
            name             = "tsBalancer_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsBalancer_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsBalancer_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsBalancer_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsBalancer_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsBalancer_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsBalancer_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsBalancer_Initializer_eInitialize__array_size" );
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsSharedMemoryCelltypeInfo {
            name             = "tsSharedMemory";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsSharedMemory__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsSharedMemory__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsSharedMemory__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsSharedMemory__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cCallInfo[]     = nMruby_tsSharedMemory_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsSharedMemory_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsSharedMemory_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsSharedMemory_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sSharedMemorySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsSharedMemory_cTECS__offset" );
            array_size        = C_EXP( "nMruby_tsSharedMemory_cTECS__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsSharedMemory_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsSharedMemory_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsSharedMemory_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsSharedMemory_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSharedMemory_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSharedMemory_VMname" );
            place           = C_EXP( "PLACE_OF_nMruby_tsSharedMemory_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSharedMemory_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_ATTR;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSharedMemory_bridgeName" );
            place           = C_EXP( "PLACE_OF_nMruby_tsSharedMemory_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsSharedMemory_InitializerCelltypeInfo {
            name             = "tsSharedMemory_Initializer";
            b_singleton      = false;
            b_IDX_is_ID_act  = C_EXP( "nMruby_tsSharedMemory_Initializer__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nMruby_tsSharedMemory_Initializer__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nMruby_tsSharedMemory_Initializer__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nMruby_tsSharedMemory_Initializer__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nMruby_tsSharedMemory_Initializer_eInitializeEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo nMruby_tsSharedMemory_Initializer_eInitializeEntryInfo{
            name            = "eInitialize";
            cSignatureInfo  = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            b_inline        = false;
            array_size      = C_EXP( "nMruby_tsSharedMemory_Initializer_eInitialize__array_size" );
        };

        /*** ::nPosix namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo nPosixNamespaceInfo{
            name = "nPosix";

            /* SIGNATURE info */
            cSignatureInfo[] = nPosix_sMainSignatureInfo.eSignatureInfo;
        };   /* cell nTECSInfo::tNamespaceInfo nPosixNamespaceInfo */

        /*** nPosix_sMain signature information ****/
        cell nTECSInfo::tSignatureInfo nPosix_sMainSignatureInfo {
            name            = "sMain";
            cFunctionInfo[] = nPosix_sMain_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nPosix_sMain_mainFunctionInfo {
            name            = "main";
            bOneway         = false;
            cParamInfo[]    = nPosix_sMain_main_argcParamInfo.eParamInfo;
            cParamInfo[]    = nPosix_sMain_main_argvParamInfo.eParamInfo;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nPosix_sMain_main_argcParamInfo {
            name            = "argc";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nPosix_sMain_main_argvParamInfo {
            name            = "argv";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $0";
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_Ptr__Ptr_TypeInfo.eTypeInfo;
        };

        /*** ::nTECSInfo namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo nTECSInfoNamespaceInfo{
            name = "nTECSInfo";

            /* SIGNATURE info */
            cSignatureInfo[] = nTECSInfo_sTypeInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sVarDeclInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sParamInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sFunctionInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sSignatureInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sCallInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sEntryInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sCelltypeInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sCellInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sRawEntryDescriptorInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sNamespaceInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sRegionInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;

            /* CELLTYPE info */
            cCelltypeInfo[] = nTECSInfo_tTECSInfoCelltypeInfo.eCelltypeInfo;
        };   /* cell nTECSInfo::tNamespaceInfo nTECSInfoNamespaceInfo */

        /*** nTECSInfo_sTypeInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sTypeInfoSignatureInfo {
            name            = "sTypeInfo";
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getSizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getKindFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getNTypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getTypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getNMemberFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getMemberInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getSizeFunctionInfo {
            name            = "getSize";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getKindFunctionInfo {
            name            = "getKind";
            bOneway         = false;
            cReturnTypeInfo = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getNTypeFunctionInfo {
            name            = "getNType";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getTypeInfoFunctionInfo {
            name            = "getTypeInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getNMemberFunctionInfo {
            name            = "getNMember";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getMemberInfoFunctionInfo {
            name            = "getMemberInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getMemberInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getMemberInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getMemberInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getMemberInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sVarDeclInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sVarDeclInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sVarDeclInfoSignatureInfo {
            name            = "sVarDeclInfo";
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getLocationInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getTypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getSizeIsExprFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getSizeIsFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getLocationInfoFunctionInfo {
            name            = "getLocationInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getLocationInfo_offsetParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getLocationInfo_placeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getLocationInfo_offsetParamInfo {
            name            = "offset";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getLocationInfo_placeParamInfo {
            name            = "place";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getTypeInfoFunctionInfo {
            name            = "getTypeInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getSizeIsExprFunctionInfo {
            name            = "getSizeIsExpr";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIsExpr_expr_strParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIsExpr_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIsExpr_expr_strParamInfo {
            name            = "expr_str";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIsExpr_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getSizeIsFunctionInfo {
            name            = "getSizeIs";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIs_sizeParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIs_p_cbParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIs_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIs_p_cbParamInfo {
            name            = "p_cb";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sParamInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sParamInfoSignatureInfo {
            name            = "sParamInfo";
            cFunctionInfo[] = nTECSInfo_sParamInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sParamInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sParamInfo_getTypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sParamInfo_getDirFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sParamInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sParamInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sParamInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sParamInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sParamInfo_getTypeInfoFunctionInfo {
            name            = "getTypeInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sParamInfo_getTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sParamInfo_getDirFunctionInfo {
            name            = "getDir";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sParamInfo_getDir_dirParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getDir_dirParamInfo {
            name            = "dir";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sFunctionInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sFunctionInfoSignatureInfo {
            name            = "sFunctionInfo";
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getReturnTypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getNParamFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getParamInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getReturnTypeInfoFunctionInfo {
            name            = "getReturnTypeInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getReturnTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getReturnTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getNParamFunctionInfo {
            name            = "getNParam";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getParamInfoFunctionInfo {
            name            = "getParamInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getParamInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getParamInfo_paramParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getParamInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getParamInfo_paramParamInfo {
            name            = "param";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sParamInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sSignatureInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sSignatureInfoSignatureInfo {
            name            = "sSignatureInfo";
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getNFunctionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getFunctionInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getNFunctionFunctionInfo {
            name            = "getNFunction";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getFunctionInfoFunctionInfo {
            name            = "getFunctionInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getFunctionInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getFunctionInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getFunctionInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getFunctionInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sFunctionInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sCallInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sCallInfoSignatureInfo {
            name            = "sCallInfo";
            cFunctionInfo[] = nTECSInfo_sCallInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getSignatureInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getArraySizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getSpecifierInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getInternalInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getLocationInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getOptimizeInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getSignatureInfoFunctionInfo {
            name            = "getSignatureInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSignatureInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSignatureInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getArraySizeFunctionInfo {
            name            = "getArraySize";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getSpecifierInfoFunctionInfo {
            name            = "getSpecifierInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_optionalParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_dynamicParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_ref_descParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_omitParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_optionalParamInfo {
            name            = "b_optional";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_dynamicParamInfo {
            name            = "b_dynamic";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_ref_descParamInfo {
            name            = "b_ref_desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_omitParamInfo {
            name            = "b_omit";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getInternalInfoFunctionInfo {
            name            = "getInternalInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getInternalInfo_b_allocator_portParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getInternalInfo_b_require_portParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getInternalInfo_b_allocator_portParamInfo {
            name            = "b_allocator_port";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getInternalInfo_b_require_portParamInfo {
            name            = "b_require_port";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getLocationInfoFunctionInfo {
            name            = "getLocationInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getLocationInfo_offsetParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getLocationInfo_placeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getLocationInfo_offsetParamInfo {
            name            = "offset";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getLocationInfo_placeParamInfo {
            name            = "place";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getOptimizeInfoFunctionInfo {
            name            = "getOptimizeInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getOptimizeInfo_b_VMT_uselessParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getOptimizeInfo_b_skelton_uselessParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getOptimizeInfo_b_cell_uniqueParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getOptimizeInfo_b_VMT_uselessParamInfo {
            name            = "b_VMT_useless";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getOptimizeInfo_b_skelton_uselessParamInfo {
            name            = "b_skelton_useless";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getOptimizeInfo_b_cell_uniqueParamInfo {
            name            = "b_cell_unique";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sEntryInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sEntryInfoSignatureInfo {
            name            = "sEntryInfo";
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getSignatureInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getArraySizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_isInlineFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getSignatureInfoFunctionInfo {
            name            = "getSignatureInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getSignatureInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getSignatureInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getArraySizeFunctionInfo {
            name            = "getArraySize";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_isInlineFunctionInfo {
            name            = "isInline";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sCelltypeInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sCelltypeInfoSignatureInfo {
            name            = "sCelltypeInfo";
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNAttrFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getAttrInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNVarFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getVarInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNCallFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getCallInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNEntryFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getEntryInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_isSingletonFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_isIDX_is_IDFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_sizeOfCBFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_sizeOfINIBFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNAttrFunctionInfo {
            name            = "getNAttr";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getAttrInfoFunctionInfo {
            name            = "getAttrInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getAttrInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getAttrInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getAttrInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getAttrInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sVarDeclInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNVarFunctionInfo {
            name            = "getNVar";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getVarInfoFunctionInfo {
            name            = "getVarInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getVarInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getVarInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getVarInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getVarInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sVarDeclInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNCallFunctionInfo {
            name            = "getNCall";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getCallInfoFunctionInfo {
            name            = "getCallInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getCallInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getCallInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getCallInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getCallInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCallInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNEntryFunctionInfo {
            name            = "getNEntry";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getEntryInfoFunctionInfo {
            name            = "getEntryInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getEntryInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getEntryInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getEntryInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getEntryInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sEntryInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_isSingletonFunctionInfo {
            name            = "isSingleton";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_isIDX_is_IDFunctionInfo {
            name            = "isIDX_is_ID";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_sizeOfCBFunctionInfo {
            name            = "sizeOfCB";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_sizeOfINIBFunctionInfo {
            name            = "sizeOfINIB";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sCellInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sCellInfoSignatureInfo {
            name            = "sCellInfo";
            cFunctionInfo[] = nTECSInfo_sCellInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getNRawEntryDescriptorInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getRawEntryDescriptorInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getCelltypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getCBPFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getINIBPFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCellInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getNRawEntryDescriptorInfoFunctionInfo {
            name            = "getNRawEntryDescriptorInfo";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getRawEntryDescriptorInfoFunctionInfo {
            name            = "getRawEntryDescriptorInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getRawEntryDescriptorInfo_indexParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCellInfo_getRawEntryDescriptorInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getRawEntryDescriptorInfo_indexParamInfo {
            name            = "index";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getRawEntryDescriptorInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sRawEntryDescriptorInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getCelltypeInfoFunctionInfo {
            name            = "getCelltypeInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getCelltypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getCelltypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getCBPFunctionInfo {
            name            = "getCBP";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getCBP_cbpParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getCBP_cbpParamInfo {
            name            = "cbp";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getINIBPFunctionInfo {
            name            = "getINIBP";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getINIBP_inibpParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getINIBP_inibpParamInfo {
            name            = "inibp";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sRawEntryDescriptorInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sRawEntryDescriptorInfoSignatureInfo {
            name            = "sRawEntryDescriptorInfo";
            cFunctionInfo[] = nTECSInfo_sRawEntryDescriptorInfo_getNRawEntryDescriptorInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRawEntryDescriptorInfo_getRawDescriptorFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRawEntryDescriptorInfo_getNRawEntryDescriptorInfoFunctionInfo {
            name            = "getNRawEntryDescriptorInfo";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRawEntryDescriptorInfo_getRawDescriptorFunctionInfo {
            name            = "getRawDescriptor";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRawEntryDescriptorInfo_getRawDescriptor_subscParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sRawEntryDescriptorInfo_getRawDescriptor_rawDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRawEntryDescriptorInfo_getRawDescriptor_subscParamInfo {
            name            = "subsc";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRawEntryDescriptorInfo_getRawDescriptor_rawDescParamInfo {
            name            = "rawDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sNamespaceInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sNamespaceInfoSignatureInfo {
            name            = "sNamespaceInfo";
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNNamespaceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNamespaceInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNSignatureFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getSignatureInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNCelltypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getCelltypeInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNNamespaceFunctionInfo {
            name            = "getNNamespace";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNamespaceInfoFunctionInfo {
            name            = "getNamespaceInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNamespaceInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNamespaceInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNamespaceInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNamespaceInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sNamespaceInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNSignatureFunctionInfo {
            name            = "getNSignature";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getSignatureInfoFunctionInfo {
            name            = "getSignatureInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getSignatureInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getSignatureInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getSignatureInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getSignatureInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNCelltypeFunctionInfo {
            name            = "getNCelltype";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getCelltypeInfoFunctionInfo {
            name            = "getCelltypeInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getCelltypeInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getCelltypeInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getCelltypeInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getCelltypeInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sRegionInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sRegionInfoSignatureInfo {
            name            = "sRegionInfo";
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNCellFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getCellInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNRegionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getRegionInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNameFunctionInfo {
            name            = "getName";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNameLengthFunctionInfo {
            name            = "getNameLength";
            bOneway         = false;
            cReturnTypeInfo = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNCellFunctionInfo {
            name            = "getNCell";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getCellInfoFunctionInfo {
            name            = "getCellInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getCellInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getCellInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getCellInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getCellInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCellInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNRegionFunctionInfo {
            name            = "getNRegion";
            bOneway         = false;
            cReturnTypeInfo = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getRegionInfoFunctionInfo {
            name            = "getRegionInfo";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getRegionInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getRegionInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getRegionInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getRegionInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sRegionInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sTECSInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sTECSInfoSignatureInfo {
            name            = "sTECSInfo";
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findNamespaceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findRegionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findSignatureFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findCelltypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findCellFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findRawEntryDescriptorFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findNamespaceFunctionInfo {
            name            = "findNamespace";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findNamespace_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findNamespace_nsDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findNamespace_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findNamespace_nsDescParamInfo {
            name            = "nsDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sNamespaceInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findRegionFunctionInfo {
            name            = "findRegion";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRegion_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRegion_regionDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRegion_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRegion_regionDescParamInfo {
            name            = "regionDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sRegionInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findSignatureFunctionInfo {
            name            = "findSignature";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findSignature_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findSignature_signatureDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findSignature_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findSignature_signatureDescParamInfo {
            name            = "signatureDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findCelltypeFunctionInfo {
            name            = "findCelltype";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCelltype_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCelltype_celltypeDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCelltype_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCelltype_celltypeDescParamInfo {
            name            = "celltypeDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findCellFunctionInfo {
            name            = "findCell";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCell_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCell_cellDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCell_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCell_cellDescParamInfo {
            name            = "cellDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCellInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findRawEntryDescriptorFunctionInfo {
            name            = "findRawEntryDescriptor";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRawEntryDescriptor_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRawEntryDescriptor_rawEntryDescDescParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRawEntryDescriptor_entryDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRawEntryDescriptor_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRawEntryDescriptor_rawEntryDescDescParamInfo {
            name            = "rawEntryDescDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sRawEntryDescriptorInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRawEntryDescriptor_entryDescParamInfo {
            name            = "entryDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sEntryInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafeFunctionInfo {
            name            = "findRawEntryDescriptor_unsafe";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafe_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafe_subscParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafe_rawDescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafe_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafe_subscParamInfo {
            name            = "subsc";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRawEntryDescriptor_unsafe_rawDescParamInfo {
            name            = "rawDesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nTECSInfo_tTECSInfoCelltypeInfo {
            name             = "tTECSInfo";
            b_singleton      = true;
            b_IDX_is_ID_act  = C_EXP( "nTECSInfo_tTECSInfo__IDX_is_ID_act" );
            sizeOfCB         = C_EXP( "nTECSInfo_tTECSInfo__sizeOfCB" );
            sizeOfINIB       = C_EXP( "nTECSInfo_tTECSInfo__sizeOfINIB" );
            n_cellInLinkUnit = C_EXP( "nTECSInfo_tTECSInfo__NCELLINLINKUNIT" );
            n_cellInSystem   = 1;
            cEntryInfo[]    = nTECSInfo_tTECSInfo_eTECSInfoEntryInfo.eEntryInfo;
            cCallInfo[]     = nTECSInfo_tTECSInfo_cTECSInfoCallInfo.eCallInfo;
        };
        cell nTECSInfo::tEntryInfo nTECSInfo_tTECSInfo_eTECSInfoEntryInfo{
            name            = "eTECSInfo";
            cSignatureInfo  = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;
            b_inline        = true;
            array_size      = C_EXP( "nTECSInfo_tTECSInfo_eTECSInfo__array_size" );
        };
        cell nTECSInfo::tCallInfo nTECSInfo_tTECSInfo_cTECSInfoCallInfo{
            name            = "cTECSInfo";
            cSignatureInfo  = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__offset" );
            array_size        = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__array_size" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__place" );
            b_VMT_useless     = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__b_cell_unique" );

        };

        /*** :: region information cell ***/
        cell nTECSInfo::tRegionInfo _LinkRootRegionInfo{
            name = "::";
            cRegionInfo[] = rDomainEV3RegionInfo.eRegionInfo;
        };

        /*** ::rDomainEV3 region information cell ***/
        cell nTECSInfo::tRegionInfo rDomainEV3RegionInfo{
            name = "rDomainEV3";
            cCellInfo[] = rDomainEV3_BridgeKernelCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeMotorACellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeMotorBCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeMotorCCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeMotorDCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeLCDCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeLEDCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeButtonCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeBatteryCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeSpeakerCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeUltrasonicSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeUltrasonicSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeUltrasonicSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeUltrasonicSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeGyroSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeGyroSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeGyroSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeGyroSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeColorSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeColorSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeColorSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeColorSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeTouchSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeTouchSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeTouchSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeTouchSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeBalancerCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BridgeSharedMemoryCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_HRP2KernelCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_MotorACellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_MotorBCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_MotorCCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_MotorDCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_LCDCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_LEDCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_ButtonCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BatteryCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_SpeakerCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_UltrasonicSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_UltrasonicSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_UltrasonicSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_UltrasonicSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_GyroSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_GyroSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_GyroSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_GyroSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_ColorSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_ColorSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_ColorSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_ColorSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_TouchSensor1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_TouchSensor2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_TouchSensor3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_TouchSensor4CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_BalancerCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_SharedMemoryCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_EV3PlatformCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_EV3TaskCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_Target1CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_Target2CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_Target3CellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_TaskCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_TaskMainCellInfo.eCellInfo;
            cCellInfo[] = rDomainEV3_TECSInfoCellInfo.eCellInfo;
            cRegionInfo[] = rDomainEV3_rTECSInfoRegionInfo.eRegionInfo;
        };

        /*** rDomainEV3_BridgeKernel cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeKernelCellInfo {
            name            = "BridgeKernel";
            cbp             = C_EXP( "rDomainEV3_BridgeKernel__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeKernel__INIBP" );
            cCelltypeInfo   = nMruby_tsKernelCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeMotorA cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeMotorACellInfo {
            name            = "BridgeMotorA";
            cbp             = C_EXP( "rDomainEV3_BridgeMotorA__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeMotorA__INIBP" );
            cCelltypeInfo   = nMruby_tsMotorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeMotorB cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeMotorBCellInfo {
            name            = "BridgeMotorB";
            cbp             = C_EXP( "rDomainEV3_BridgeMotorB__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeMotorB__INIBP" );
            cCelltypeInfo   = nMruby_tsMotorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeMotorC cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeMotorCCellInfo {
            name            = "BridgeMotorC";
            cbp             = C_EXP( "rDomainEV3_BridgeMotorC__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeMotorC__INIBP" );
            cCelltypeInfo   = nMruby_tsMotorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeMotorD cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeMotorDCellInfo {
            name            = "BridgeMotorD";
            cbp             = C_EXP( "rDomainEV3_BridgeMotorD__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeMotorD__INIBP" );
            cCelltypeInfo   = nMruby_tsMotorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeLCD cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeLCDCellInfo {
            name            = "BridgeLCD";
            cbp             = C_EXP( "rDomainEV3_BridgeLCD__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeLCD__INIBP" );
            cCelltypeInfo   = nMruby_tsLCDCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeLED cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeLEDCellInfo {
            name            = "BridgeLED";
            cbp             = C_EXP( "rDomainEV3_BridgeLED__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeLED__INIBP" );
            cCelltypeInfo   = nMruby_tsLEDCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeButton cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeButtonCellInfo {
            name            = "BridgeButton";
            cbp             = C_EXP( "rDomainEV3_BridgeButton__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeButton__INIBP" );
            cCelltypeInfo   = nMruby_tsButtonCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeBattery cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeBatteryCellInfo {
            name            = "BridgeBattery";
            cbp             = C_EXP( "rDomainEV3_BridgeBattery__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeBattery__INIBP" );
            cCelltypeInfo   = nMruby_tsBatteryCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeSpeaker cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeSpeakerCellInfo {
            name            = "BridgeSpeaker";
            cbp             = C_EXP( "rDomainEV3_BridgeSpeaker__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeSpeaker__INIBP" );
            cCelltypeInfo   = nMruby_tsSpeakerCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeUltrasonicSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeUltrasonicSensor1CellInfo {
            name            = "BridgeUltrasonicSensor1";
            cbp             = C_EXP( "rDomainEV3_BridgeUltrasonicSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeUltrasonicSensor1__INIBP" );
            cCelltypeInfo   = nMruby_tsUltrasonicSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeUltrasonicSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeUltrasonicSensor2CellInfo {
            name            = "BridgeUltrasonicSensor2";
            cbp             = C_EXP( "rDomainEV3_BridgeUltrasonicSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeUltrasonicSensor2__INIBP" );
            cCelltypeInfo   = nMruby_tsUltrasonicSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeUltrasonicSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeUltrasonicSensor3CellInfo {
            name            = "BridgeUltrasonicSensor3";
            cbp             = C_EXP( "rDomainEV3_BridgeUltrasonicSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeUltrasonicSensor3__INIBP" );
            cCelltypeInfo   = nMruby_tsUltrasonicSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeUltrasonicSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeUltrasonicSensor4CellInfo {
            name            = "BridgeUltrasonicSensor4";
            cbp             = C_EXP( "rDomainEV3_BridgeUltrasonicSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeUltrasonicSensor4__INIBP" );
            cCelltypeInfo   = nMruby_tsUltrasonicSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeGyroSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeGyroSensor1CellInfo {
            name            = "BridgeGyroSensor1";
            cbp             = C_EXP( "rDomainEV3_BridgeGyroSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeGyroSensor1__INIBP" );
            cCelltypeInfo   = nMruby_tsGyroSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeGyroSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeGyroSensor2CellInfo {
            name            = "BridgeGyroSensor2";
            cbp             = C_EXP( "rDomainEV3_BridgeGyroSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeGyroSensor2__INIBP" );
            cCelltypeInfo   = nMruby_tsGyroSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeGyroSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeGyroSensor3CellInfo {
            name            = "BridgeGyroSensor3";
            cbp             = C_EXP( "rDomainEV3_BridgeGyroSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeGyroSensor3__INIBP" );
            cCelltypeInfo   = nMruby_tsGyroSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeGyroSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeGyroSensor4CellInfo {
            name            = "BridgeGyroSensor4";
            cbp             = C_EXP( "rDomainEV3_BridgeGyroSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeGyroSensor4__INIBP" );
            cCelltypeInfo   = nMruby_tsGyroSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeColorSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeColorSensor1CellInfo {
            name            = "BridgeColorSensor1";
            cbp             = C_EXP( "rDomainEV3_BridgeColorSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeColorSensor1__INIBP" );
            cCelltypeInfo   = nMruby_tsColorSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeColorSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeColorSensor2CellInfo {
            name            = "BridgeColorSensor2";
            cbp             = C_EXP( "rDomainEV3_BridgeColorSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeColorSensor2__INIBP" );
            cCelltypeInfo   = nMruby_tsColorSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeColorSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeColorSensor3CellInfo {
            name            = "BridgeColorSensor3";
            cbp             = C_EXP( "rDomainEV3_BridgeColorSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeColorSensor3__INIBP" );
            cCelltypeInfo   = nMruby_tsColorSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeColorSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeColorSensor4CellInfo {
            name            = "BridgeColorSensor4";
            cbp             = C_EXP( "rDomainEV3_BridgeColorSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeColorSensor4__INIBP" );
            cCelltypeInfo   = nMruby_tsColorSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeTouchSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeTouchSensor1CellInfo {
            name            = "BridgeTouchSensor1";
            cbp             = C_EXP( "rDomainEV3_BridgeTouchSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeTouchSensor1__INIBP" );
            cCelltypeInfo   = nMruby_tsTouchSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeTouchSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeTouchSensor2CellInfo {
            name            = "BridgeTouchSensor2";
            cbp             = C_EXP( "rDomainEV3_BridgeTouchSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeTouchSensor2__INIBP" );
            cCelltypeInfo   = nMruby_tsTouchSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeTouchSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeTouchSensor3CellInfo {
            name            = "BridgeTouchSensor3";
            cbp             = C_EXP( "rDomainEV3_BridgeTouchSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeTouchSensor3__INIBP" );
            cCelltypeInfo   = nMruby_tsTouchSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeTouchSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeTouchSensor4CellInfo {
            name            = "BridgeTouchSensor4";
            cbp             = C_EXP( "rDomainEV3_BridgeTouchSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeTouchSensor4__INIBP" );
            cCelltypeInfo   = nMruby_tsTouchSensorCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeBalancer cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeBalancerCellInfo {
            name            = "BridgeBalancer";
            cbp             = C_EXP( "rDomainEV3_BridgeBalancer__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeBalancer__INIBP" );
            cCelltypeInfo   = nMruby_tsBalancerCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_BridgeSharedMemory cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BridgeSharedMemoryCellInfo {
            name            = "BridgeSharedMemory";
            cbp             = C_EXP( "rDomainEV3_BridgeSharedMemory__CBP" );
            inibp           = C_EXP( "rDomainEV3_BridgeSharedMemory__INIBP" );
            cCelltypeInfo   = nMruby_tsSharedMemoryCelltypeInfo.eCelltypeInfo;
        };

        /*** rDomainEV3_HRP2Kernel cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_HRP2KernelCellInfo {
            name            = "HRP2Kernel";
            cbp             = C_EXP( "rDomainEV3_HRP2Kernel__CBP" );
            inibp           = C_EXP( "rDomainEV3_HRP2Kernel__INIBP" );
            cCelltypeInfo   = tKernelCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_HRP2Kernel_eKernelRawEntryDescriptorInfo.eRawEntryDescriptor;
            cRawEntryDescriptor[] = rDomainEV3_HRP2Kernel_eiKernelRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_HRP2Kernel_eKernelRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_HRP2Kernel_eKernel_des" ) };
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_HRP2Kernel_eiKernelRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_HRP2Kernel_eiKernel_des" ) };
        };

        /*** rDomainEV3_MotorA cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_MotorACellInfo {
            name            = "MotorA";
            cbp             = C_EXP( "rDomainEV3_MotorA__CBP" );
            inibp           = C_EXP( "rDomainEV3_MotorA__INIBP" );
            cCelltypeInfo   = tMotorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_MotorA_eMotorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_MotorA_eMotorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_MotorA_eMotor_des" ) };
        };

        /*** rDomainEV3_MotorB cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_MotorBCellInfo {
            name            = "MotorB";
            cbp             = C_EXP( "rDomainEV3_MotorB__CBP" );
            inibp           = C_EXP( "rDomainEV3_MotorB__INIBP" );
            cCelltypeInfo   = tMotorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_MotorB_eMotorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_MotorB_eMotorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_MotorB_eMotor_des" ) };
        };

        /*** rDomainEV3_MotorC cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_MotorCCellInfo {
            name            = "MotorC";
            cbp             = C_EXP( "rDomainEV3_MotorC__CBP" );
            inibp           = C_EXP( "rDomainEV3_MotorC__INIBP" );
            cCelltypeInfo   = tMotorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_MotorC_eMotorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_MotorC_eMotorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_MotorC_eMotor_des" ) };
        };

        /*** rDomainEV3_MotorD cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_MotorDCellInfo {
            name            = "MotorD";
            cbp             = C_EXP( "rDomainEV3_MotorD__CBP" );
            inibp           = C_EXP( "rDomainEV3_MotorD__INIBP" );
            cCelltypeInfo   = tMotorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_MotorD_eMotorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_MotorD_eMotorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_MotorD_eMotor_des" ) };
        };

        /*** rDomainEV3_LCD cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_LCDCellInfo {
            name            = "LCD";
            cbp             = C_EXP( "rDomainEV3_LCD__CBP" );
            inibp           = C_EXP( "rDomainEV3_LCD__INIBP" );
            cCelltypeInfo   = tLCDCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_LCD_eLCDRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_LCD_eLCDRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_LCD_eLCD_des" ) };
        };

        /*** rDomainEV3_LED cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_LEDCellInfo {
            name            = "LED";
            cbp             = C_EXP( "rDomainEV3_LED__CBP" );
            inibp           = C_EXP( "rDomainEV3_LED__INIBP" );
            cCelltypeInfo   = tLEDCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_LED_eLEDRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_LED_eLEDRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_LED_eLED_des" ) };
        };

        /*** rDomainEV3_Button cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_ButtonCellInfo {
            name            = "Button";
            cbp             = C_EXP( "rDomainEV3_Button__CBP" );
            inibp           = C_EXP( "rDomainEV3_Button__INIBP" );
            cCelltypeInfo   = tButtonCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Button_eButtonRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Button_eButtonRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Button_eButton_des" ) };
        };

        /*** rDomainEV3_Battery cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BatteryCellInfo {
            name            = "Battery";
            cbp             = C_EXP( "rDomainEV3_Battery__CBP" );
            inibp           = C_EXP( "rDomainEV3_Battery__INIBP" );
            cCelltypeInfo   = tBatteryCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Battery_eBatteryRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Battery_eBatteryRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Battery_eBattery_des" ) };
        };

        /*** rDomainEV3_Speaker cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_SpeakerCellInfo {
            name            = "Speaker";
            cbp             = C_EXP( "rDomainEV3_Speaker__CBP" );
            inibp           = C_EXP( "rDomainEV3_Speaker__INIBP" );
            cCelltypeInfo   = tSpeakerCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Speaker_eSpeakerRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Speaker_eSpeakerRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Speaker_eSpeaker_des" ) };
        };

        /*** rDomainEV3_UltrasonicSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_UltrasonicSensor1CellInfo {
            name            = "UltrasonicSensor1";
            cbp             = C_EXP( "rDomainEV3_UltrasonicSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_UltrasonicSensor1__INIBP" );
            cCelltypeInfo   = tUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_UltrasonicSensor1_eUltrasonicSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_UltrasonicSensor1_eUltrasonicSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_UltrasonicSensor1_eUltrasonicSensor_des" ) };
        };

        /*** rDomainEV3_UltrasonicSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_UltrasonicSensor2CellInfo {
            name            = "UltrasonicSensor2";
            cbp             = C_EXP( "rDomainEV3_UltrasonicSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_UltrasonicSensor2__INIBP" );
            cCelltypeInfo   = tUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_UltrasonicSensor2_eUltrasonicSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_UltrasonicSensor2_eUltrasonicSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_UltrasonicSensor2_eUltrasonicSensor_des" ) };
        };

        /*** rDomainEV3_UltrasonicSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_UltrasonicSensor3CellInfo {
            name            = "UltrasonicSensor3";
            cbp             = C_EXP( "rDomainEV3_UltrasonicSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_UltrasonicSensor3__INIBP" );
            cCelltypeInfo   = tUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_UltrasonicSensor3_eUltrasonicSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_UltrasonicSensor3_eUltrasonicSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_UltrasonicSensor3_eUltrasonicSensor_des" ) };
        };

        /*** rDomainEV3_UltrasonicSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_UltrasonicSensor4CellInfo {
            name            = "UltrasonicSensor4";
            cbp             = C_EXP( "rDomainEV3_UltrasonicSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_UltrasonicSensor4__INIBP" );
            cCelltypeInfo   = tUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_UltrasonicSensor4_eUltrasonicSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_UltrasonicSensor4_eUltrasonicSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_UltrasonicSensor4_eUltrasonicSensor_des" ) };
        };

        /*** rDomainEV3_GyroSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_GyroSensor1CellInfo {
            name            = "GyroSensor1";
            cbp             = C_EXP( "rDomainEV3_GyroSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_GyroSensor1__INIBP" );
            cCelltypeInfo   = tGyroSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_GyroSensor1_eGyroSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_GyroSensor1_eGyroSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_GyroSensor1_eGyroSensor_des" ) };
        };

        /*** rDomainEV3_GyroSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_GyroSensor2CellInfo {
            name            = "GyroSensor2";
            cbp             = C_EXP( "rDomainEV3_GyroSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_GyroSensor2__INIBP" );
            cCelltypeInfo   = tGyroSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_GyroSensor2_eGyroSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_GyroSensor2_eGyroSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_GyroSensor2_eGyroSensor_des" ) };
        };

        /*** rDomainEV3_GyroSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_GyroSensor3CellInfo {
            name            = "GyroSensor3";
            cbp             = C_EXP( "rDomainEV3_GyroSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_GyroSensor3__INIBP" );
            cCelltypeInfo   = tGyroSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_GyroSensor3_eGyroSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_GyroSensor3_eGyroSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_GyroSensor3_eGyroSensor_des" ) };
        };

        /*** rDomainEV3_GyroSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_GyroSensor4CellInfo {
            name            = "GyroSensor4";
            cbp             = C_EXP( "rDomainEV3_GyroSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_GyroSensor4__INIBP" );
            cCelltypeInfo   = tGyroSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_GyroSensor4_eGyroSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_GyroSensor4_eGyroSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_GyroSensor4_eGyroSensor_des" ) };
        };

        /*** rDomainEV3_ColorSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_ColorSensor1CellInfo {
            name            = "ColorSensor1";
            cbp             = C_EXP( "rDomainEV3_ColorSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_ColorSensor1__INIBP" );
            cCelltypeInfo   = tColorSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_ColorSensor1_eColorSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_ColorSensor1_eColorSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_ColorSensor1_eColorSensor_des" ) };
        };

        /*** rDomainEV3_ColorSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_ColorSensor2CellInfo {
            name            = "ColorSensor2";
            cbp             = C_EXP( "rDomainEV3_ColorSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_ColorSensor2__INIBP" );
            cCelltypeInfo   = tColorSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_ColorSensor2_eColorSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_ColorSensor2_eColorSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_ColorSensor2_eColorSensor_des" ) };
        };

        /*** rDomainEV3_ColorSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_ColorSensor3CellInfo {
            name            = "ColorSensor3";
            cbp             = C_EXP( "rDomainEV3_ColorSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_ColorSensor3__INIBP" );
            cCelltypeInfo   = tColorSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_ColorSensor3_eColorSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_ColorSensor3_eColorSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_ColorSensor3_eColorSensor_des" ) };
        };

        /*** rDomainEV3_ColorSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_ColorSensor4CellInfo {
            name            = "ColorSensor4";
            cbp             = C_EXP( "rDomainEV3_ColorSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_ColorSensor4__INIBP" );
            cCelltypeInfo   = tColorSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_ColorSensor4_eColorSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_ColorSensor4_eColorSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_ColorSensor4_eColorSensor_des" ) };
        };

        /*** rDomainEV3_TouchSensor1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_TouchSensor1CellInfo {
            name            = "TouchSensor1";
            cbp             = C_EXP( "rDomainEV3_TouchSensor1__CBP" );
            inibp           = C_EXP( "rDomainEV3_TouchSensor1__INIBP" );
            cCelltypeInfo   = tTouchSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_TouchSensor1_eTouchSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_TouchSensor1_eTouchSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_TouchSensor1_eTouchSensor_des" ) };
        };

        /*** rDomainEV3_TouchSensor2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_TouchSensor2CellInfo {
            name            = "TouchSensor2";
            cbp             = C_EXP( "rDomainEV3_TouchSensor2__CBP" );
            inibp           = C_EXP( "rDomainEV3_TouchSensor2__INIBP" );
            cCelltypeInfo   = tTouchSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_TouchSensor2_eTouchSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_TouchSensor2_eTouchSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_TouchSensor2_eTouchSensor_des" ) };
        };

        /*** rDomainEV3_TouchSensor3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_TouchSensor3CellInfo {
            name            = "TouchSensor3";
            cbp             = C_EXP( "rDomainEV3_TouchSensor3__CBP" );
            inibp           = C_EXP( "rDomainEV3_TouchSensor3__INIBP" );
            cCelltypeInfo   = tTouchSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_TouchSensor3_eTouchSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_TouchSensor3_eTouchSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_TouchSensor3_eTouchSensor_des" ) };
        };

        /*** rDomainEV3_TouchSensor4 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_TouchSensor4CellInfo {
            name            = "TouchSensor4";
            cbp             = C_EXP( "rDomainEV3_TouchSensor4__CBP" );
            inibp           = C_EXP( "rDomainEV3_TouchSensor4__INIBP" );
            cCelltypeInfo   = tTouchSensorCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_TouchSensor4_eTouchSensorRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_TouchSensor4_eTouchSensorRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_TouchSensor4_eTouchSensor_des" ) };
        };

        /*** rDomainEV3_Balancer cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_BalancerCellInfo {
            name            = "Balancer";
            cbp             = C_EXP( "rDomainEV3_Balancer__CBP" );
            inibp           = C_EXP( "rDomainEV3_Balancer__INIBP" );
            cCelltypeInfo   = tBalancerCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Balancer_eBalancerRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Balancer_eBalancerRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Balancer_eBalancer_des" ) };
        };

        /*** rDomainEV3_SharedMemory cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_SharedMemoryCellInfo {
            name            = "SharedMemory";
            cbp             = C_EXP( "rDomainEV3_SharedMemory__CBP" );
            inibp           = C_EXP( "rDomainEV3_SharedMemory__INIBP" );
            cCelltypeInfo   = tSharedMemoryCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_SharedMemory_eSharedMemoryRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_SharedMemory_eSharedMemoryRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_SharedMemory_eSharedMemory_des" ) };
        };

        /*** rDomainEV3_EV3Platform cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_EV3PlatformCellInfo {
            name            = "EV3Platform";
            cbp             = C_EXP( "rDomainEV3_EV3Platform__CBP" );
            inibp           = C_EXP( "rDomainEV3_EV3Platform__INIBP" );
            cCelltypeInfo   = tEV3PlatformCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_EV3Platform_eTaskBodyRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_EV3Platform_eTaskBodyRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_EV3Platform_eTaskBody_des" ) };
        };

        /*** rDomainEV3_EV3Task cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_EV3TaskCellInfo {
            name            = "EV3Task";
            cbp             = C_EXP( "rDomainEV3_EV3Task__CBP" );
            inibp           = C_EXP( "rDomainEV3_EV3Task__INIBP" );
            cCelltypeInfo   = tTaskCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_EV3Task_eTaskRawEntryDescriptorInfo.eRawEntryDescriptor;
            cRawEntryDescriptor[] = rDomainEV3_EV3Task_eiTaskRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_EV3Task_eTaskRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_EV3Task_eTask_des" ) };
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_EV3Task_eiTaskRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_EV3Task_eiTask_des" ) };
        };

        /*** rDomainEV3_Target1 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_Target1CellInfo {
            name            = "Target1";
            cbp             = C_EXP( "rDomainEV3_Target1__CBP" );
            inibp           = C_EXP( "rDomainEV3_Target1__INIBP" );
            cCelltypeInfo   = tTarget1CelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Target1_eTarget1RawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Target1_eTarget1RawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Target1_eTarget1_des" ) };
        };

        /*** rDomainEV3_Target2 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_Target2CellInfo {
            name            = "Target2";
            cbp             = C_EXP( "rDomainEV3_Target2__CBP" );
            inibp           = C_EXP( "rDomainEV3_Target2__INIBP" );
            cCelltypeInfo   = tTarget2CelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Target2_eTarget2RawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Target2_eTarget2RawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Target2_eTarget2_des" ) };
        };

        /*** rDomainEV3_Target3 cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_Target3CellInfo {
            name            = "Target3";
            cbp             = C_EXP( "rDomainEV3_Target3__CBP" );
            inibp           = C_EXP( "rDomainEV3_Target3__INIBP" );
            cCelltypeInfo   = tTarget3CelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Target3_eTarget3RawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Target3_eTarget3RawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Target3_eTarget3_des" ) };
        };

        /*** rDomainEV3_Task cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_TaskCellInfo {
            name            = "Task";
            cbp             = C_EXP( "rDomainEV3_Task__CBP" );
            inibp           = C_EXP( "rDomainEV3_Task__INIBP" );
            cCelltypeInfo   = tTaskCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_Task_eTaskRawEntryDescriptorInfo.eRawEntryDescriptor;
            cRawEntryDescriptor[] = rDomainEV3_Task_eiTaskRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Task_eTaskRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Task_eTask_des" ) };
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_Task_eiTaskRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_Task_eiTask_des" ) };
        };

        /*** rDomainEV3_TaskMain cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_TaskMainCellInfo {
            name            = "TaskMain";
            cbp             = C_EXP( "rDomainEV3_TaskMain__CBP" );
            inibp           = C_EXP( "rDomainEV3_TaskMain__INIBP" );
            cCelltypeInfo   = tTaskMainCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_TaskMain_eBodyRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_TaskMain_eBodyRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_TaskMain_eBody_des" ) };
        };

        /*** rDomainEV3_TECSInfo cell information ****/
        cell nTECSInfo::tCellInfo rDomainEV3_TECSInfoCellInfo {
            name            = "TECSInfo";
            cbp             = C_EXP( "rDomainEV3_TECSInfo__CBP" );
            inibp           = C_EXP( "rDomainEV3_TECSInfo__INIBP" );
            cCelltypeInfo   = nTECSInfo_tTECSInfoCelltypeInfo.eCelltypeInfo;
            cRawEntryDescriptor[] = rDomainEV3_TECSInfo_eTECSInfoRawEntryDescriptorInfo.eRawEntryDescriptor;
        };
        cell nTECSInfo::tRawEntryDescriptorInfo rDomainEV3_TECSInfo_eTECSInfoRawEntryDescriptorInfo {
           size = 1;
           rawEntryDescriptor = { C_EXP( "&rDomainEV3_TECSInfo_eTECSInfo_des" ) };
        };

        /*** ::rDomainEV3::rTECSInfo region information cell ***/
        cell nTECSInfo::tRegionInfo rDomainEV3_rTECSInfoRegionInfo{
            name = "rTECSInfo";
        };

        /*** TYPE information cell ***/
        cell nTECSInfo::tVoidTypeInfo voidTypeInfo{
            name           = "void";
            typeKind       = TECSTypeKind_VoidType;
            size           = C_EXP( "sizeof(void)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo TEXPTNTypeInfo{
            name           = "TEXPTN";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(TEXPTN)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo uint_tTypeInfo{
            name           = "uint_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(uint_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = unsigned__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo unsigned__intTypeInfo{
            name           = "unsigned int";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(unsigned int)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo ERTypeInfo{
            name           = "ER";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(ER)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo int_tTypeInfo{
            name           = "int_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(int_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = signed__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo signed__intTypeInfo{
            name           = "signed int";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(signed int)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo ER_UINTTypeInfo{
            name           = "ER_UINT";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(ER_UINT)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo PRITypeInfo{
            name           = "PRI";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(PRI)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo PRI_Ptr_TypeInfo{
            name           = "PRI*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(PRI*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RTSK_Ptr_TypeInfo{
            name           = "T_RTSK*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RTSK*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RTSKTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RTSKTypeInfo{
            name           = "T_RTSK";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RTSK)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rtskTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rtskTypeInfo{
            name           = "struct t_rtsk";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rtsk)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rtsk_tskstatVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_tskpriVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_tskbpriVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_tskwaitVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_wobjidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_lefttmoVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_actcntVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_wupcntVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_texmskVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_waifbdVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtsk_svclevelVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo STATTypeInfo{
            name           = "STAT";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(STAT)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo IDTypeInfo{
            name           = "ID";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(ID)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo TMOTypeInfo{
            name           = "TMO";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(TMO)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo bool_tTypeInfo{
            name           = "bool_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(bool_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo intTypeInfo{
            name           = "int";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(int)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_RTEX_Ptr_TypeInfo{
            name           = "T_RTEX*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RTEX*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RTEXTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RTEXTypeInfo{
            name           = "T_RTEX";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RTEX)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rtexTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rtexTypeInfo{
            name           = "struct t_rtex";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rtex)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rtex_texstatVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rtex_pndptnVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo OVRTIMTypeInfo{
            name           = "OVRTIM";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(OVRTIM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = ulong_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo ulong_tTypeInfo{
            name           = "ulong_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(ulong_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = unsigned__longTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo unsigned__longTypeInfo{
            name           = "unsigned long";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(unsigned long)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_ROVR_Ptr_TypeInfo{
            name           = "T_ROVR*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_ROVR*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_ROVRTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_ROVRTypeInfo{
            name           = "T_ROVR";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_ROVR)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rovrTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rovrTypeInfo{
            name           = "struct t_rovr";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rovr)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rovr_ovrstatVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rovr_leftotmVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RCYC_Ptr_TypeInfo{
            name           = "T_RCYC*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RCYC*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RCYCTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RCYCTypeInfo{
            name           = "T_RCYC";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RCYC)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rcycTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rcycTypeInfo{
            name           = "struct t_rcyc";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rcyc)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rcyc_cycstatVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rcyc_lefttimVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo RELTIMTypeInfo{
            name           = "RELTIM";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(RELTIM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RALM_Ptr_TypeInfo{
            name           = "T_RALM*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RALM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RALMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RALMTypeInfo{
            name           = "T_RALM";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RALM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_ralmTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_ralmTypeInfo{
            name           = "struct t_ralm";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_ralm)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_ralm_almstatVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_ralm_lefttimVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RSEM_Ptr_TypeInfo{
            name           = "T_RSEM*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RSEM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RSEMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RSEMTypeInfo{
            name           = "T_RSEM";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RSEM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rsemTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rsemTypeInfo{
            name           = "struct t_rsem";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rsem)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rsem_wtskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rsem_semcntVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo FLGPTNTypeInfo{
            name           = "FLGPTN";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(FLGPTN)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo MODETypeInfo{
            name           = "MODE";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(MODE)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo FLGPTN_Ptr_TypeInfo{
            name           = "FLGPTN*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(FLGPTN*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RFLG_Ptr_TypeInfo{
            name           = "T_RFLG*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RFLG*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RFLGTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RFLGTypeInfo{
            name           = "T_RFLG";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RFLG)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rflgTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rflgTypeInfo{
            name           = "struct t_rflg";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rflg)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rflg_wtskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rflg_flgptnVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo intptr_tTypeInfo{
            name           = "intptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(intptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = __intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo __intptr_tTypeInfo{
            name           = "__intptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(__intptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo intptr_t_Ptr_TypeInfo{
            name           = "intptr_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(intptr_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RDTQ_Ptr_TypeInfo{
            name           = "T_RDTQ*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RDTQ*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RDTQTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RDTQTypeInfo{
            name           = "T_RDTQ";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RDTQ)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rdtqTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rdtqTypeInfo{
            name           = "struct t_rdtq";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rdtq)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rdtq_stskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rdtq_rtskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rdtq_sdtqcntVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RPDQ_Ptr_TypeInfo{
            name           = "T_RPDQ*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RPDQ*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RPDQTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RPDQTypeInfo{
            name           = "T_RPDQ";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RPDQ)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rpdqTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rpdqTypeInfo{
            name           = "struct t_rpdq";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rpdq)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rpdq_stskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rpdq_rtskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rpdq_spdqcntVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tPtrTypeInfo void_Ptr__Ptr_TypeInfo{
            name           = "void**";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(void**)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo void_Ptr_TypeInfo{
            name           = "void*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(void*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__void_Ptr_TypeInfo{
            name           = "const void*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(const void*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = const__voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVoidTypeInfo const__voidTypeInfo{
            name           = "const void";
            typeKind       = TECSTypeKind_VoidType;
            size           = C_EXP( "sizeof(const void)" );
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_RMPF_Ptr_TypeInfo{
            name           = "T_RMPF*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RMPF*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RMPFTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RMPFTypeInfo{
            name           = "T_RMPF";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RMPF)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rmpfTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rmpfTypeInfo{
            name           = "struct t_rmpf";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rmpf)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rmpf_wtskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rmpf_fblkcntVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tPtrTypeInfo ID_Ptr_TypeInfo{
            name           = "ID*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(ID*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo SYSTIM_Ptr_TypeInfo{
            name           = "SYSTIM*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(SYSTIM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = SYSTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo SYSTIMTypeInfo{
            name           = "SYSTIM";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(SYSTIM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = ulong_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo SYSUTM_Ptr_TypeInfo{
            name           = "SYSUTM*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(SYSUTM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = SYSUTMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo SYSUTMTypeInfo{
            name           = "SYSUTM";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(SYSUTM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = ulong_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__uint8_t_Ptr_TypeInfo{
            name           = "const uint8_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(const uint8_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = const__uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__uint8_tTypeInfo{
            name           = "const uint8_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(const uint8_t)" );
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tIntTypeInfo uint32_tTypeInfo{
            name           = "uint32_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(uint32_t)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo uint8_t_Ptr_TypeInfo{
            name           = "uint8_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(uint8_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo uint8_tTypeInfo{
            name           = "uint8_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(uint8_t)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_RMBF_Ptr_TypeInfo{
            name           = "T_RMBF*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(T_RMBF*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = T_RMBFTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RMBFTypeInfo{
            name           = "T_RMBF";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(T_RMBF)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__t_rmbfTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rmbfTypeInfo{
            name           = "struct t_rmbf";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct t_rmbf)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__t_rmbf_stskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rmbf_rtskidVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rmbf_smbfcntVarDeclInfo.eVarDeclInfo;
            cVarDeclInfo[] = struct__t_rmbf_fmbfszVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo SIZETypeInfo{
            name           = "SIZE";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(SIZE)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uintptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo uintptr_tTypeInfo{
            name           = "uintptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(uintptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = __uintptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo __uintptr_tTypeInfo{
            name           = "__uintptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(__uintptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = unsigned__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo size_tTypeInfo{
            name           = "size_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(size_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = unsigned__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo int16_tTypeInfo{
            name           = "int16_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(int16_t)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo colorid_tTypeInfo{
            name           = "colorid_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(colorid_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo int32_tTypeInfo{
            name           = "int32_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(int32_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = __int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo __int32_tTypeInfo{
            name           = "__int32_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(__int32_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = longTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo longTypeInfo{
            name           = "long";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(long)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo uint16_t_Ptr_TypeInfo{
            name           = "uint16_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(uint16_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo uint16_tTypeInfo{
            name           = "uint16_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(uint16_t)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tFloatTypeInfo float32_tTypeInfo{
            name           = "float32_t";
            typeKind       = TECSTypeKind_FloatType;
            size           = C_EXP( "sizeof(float32_t)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo button_tTypeInfo{
            name           = "button_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(button_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo lcdfont_tTypeInfo{
            name           = "lcdfont_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(lcdfont_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo int32_t_Ptr_TypeInfo{
            name           = "int32_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(int32_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__char_Ptr_TypeInfo{
            name           = "const char*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(const char*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = const__charTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__charTypeInfo{
            name           = "const char";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(const char)" );
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo lcdcolor_tTypeInfo{
            name           = "lcdcolor_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(lcdcolor_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo ledcolor_tTypeInfo{
            name           = "ledcolor_t";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(ledcolor_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo int8_t_Ptr_TypeInfo{
            name           = "int8_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(int8_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo int8_tTypeInfo{
            name           = "int8_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(int8_t)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo const__int8_t_Ptr_TypeInfo{
            name           = "const int8_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(const int8_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = const__int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__int8_tTypeInfo{
            name           = "const int8_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(const int8_t)" );
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo const__char_t_Ptr_TypeInfo{
            name           = "const char_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(const char_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = const__char_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__char_tTypeInfo{
            name           = "const char_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(const char_t)" );
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo char_t_Ptr_TypeInfo{
            name           = "char_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(char_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = char_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo char_tTypeInfo{
            name           = "char_t";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(char_t)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo ATRTypeInfo{
            name           = "ATR";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(ATR)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tArrayTypeInfo ACPTN_Array4_TypeInfo{
            name           = "ACPTN[4]";
            typeKind       = TECSTypeKind_ArrayType;
            size           = C_EXP( "sizeof(ACPTN[4])" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = ACPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo ACPTNTypeInfo{
            name           = "ACPTN";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(ACPTN)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__mrb_state_Ptr_TypeInfo{
            name           = "const mrb_state*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(const mrb_state*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = const__mrb_stateTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo const__mrb_stateTypeInfo{
            name           = "const mrb_state";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(const mrb_state)" );
            b_const        = true;
            b_volatile     = false;
            cTypeInfo        = const__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__intTypeInfo{
            name           = "const int";
            typeKind       = TECSTypeKind_IntType;
            size           = C_EXP( "sizeof(const int)" );
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo mrb_state_Ptr_TypeInfo{
            name           = "mrb_state*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(mrb_state*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = mrb_stateTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo mrb_stateTypeInfo{
            name           = "mrb_state";
            typeKind       = TECSTypeKind_DefinedType;
            size           = C_EXP( "sizeof(mrb_state)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo struct__RClass_Ptr_TypeInfo{
            name           = "struct RClass*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(struct RClass*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = struct__RClassTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__RClassTypeInfo{
            name           = "struct RClass";
            typeKind       = TECSTypeKind_StructType;
            size           = C_EXP( "sizeof(struct RClass)" );
            b_const        = false;
            b_volatile     = false;
            cVarDeclInfo[] = struct__RClass_gcnextVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__char_Ptr__Ptr_TypeInfo{
            name           = "const char**";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(const char**)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sTypeInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sTypeInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sTypeInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sTypeInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sTypeInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sTypeInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sTypeInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sVarDeclInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sVarDeclInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sVarDeclInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sVarDeclInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sVarDeclInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sVarDeclInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sVarDeclInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sVarDeclInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo uint32_t_Ptr_TypeInfo{
            name           = "uint32_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(uint32_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sParamInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sParamInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sParamInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sParamInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sParamInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sParamInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sParamInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sParamInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sFunctionInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sFunctionInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sFunctionInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sFunctionInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sFunctionInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sFunctionInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sFunctionInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sFunctionInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sSignatureInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sSignatureInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sSignatureInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sSignatureInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sSignatureInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sSignatureInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sSignatureInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo bool_t_Ptr_TypeInfo{
            name           = "bool_t*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(bool_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sCallInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sCallInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sCallInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sCallInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sCallInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sCallInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sCallInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sCallInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sEntryInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sEntryInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sEntryInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sEntryInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sEntryInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sEntryInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sEntryInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sEntryInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sRawEntryDescriptorInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sRawEntryDescriptorInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sRawEntryDescriptorInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sRawEntryDescriptorInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sRawEntryDescriptorInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sRawEntryDescriptorInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sRawEntryDescriptorInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sRawEntryDescriptorInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sCelltypeInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sCelltypeInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sCelltypeInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sCelltypeInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sCelltypeInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sCelltypeInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sCelltypeInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sNamespaceInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sNamespaceInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sNamespaceInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sNamespaceInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sNamespaceInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sNamespaceInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sNamespaceInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sNamespaceInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sCellInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sCellInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sCellInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sCellInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sCellInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sCellInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sCellInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sCellInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sRegionInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sRegionInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sRegionInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo        = Descriptor_of_nTECSInfo_sRegionInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sRegionInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sRegionInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            size           = C_EXP( "sizeof(Descriptor( nTECSInfo_sRegionInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sRegionInfoSignatureInfo.eSignatureInfo;
        };

        /*** TECS information cell ***/
        cell nTECSInfo::tTECSInfoSub TECSInfoSub {
            cNamespaceInfo = _RootNamespaceInfo.eNamespaceInfo;
            cRegionInfo    = _LinkRootRegionInfo.eRegionInfo;
        } /* TECSInfoSub */;
    }; /* rTECSInfo */
};
